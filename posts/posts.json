[
  {
    "path": "posts/2021-06-29-r2dii-data-0-2-0-is-now-on-cran/",
    "title": "r2dii.data 0.2.0 is now on CRAN",
    "description": "Signifcant changes to `ald_demo`",
    "author": [
      {
        "name": "Jackson Hoffart",
        "url": "https://github.com/jdhoffa"
      }
    ],
    "date": "2021-06-29",
    "categories": [
      "r2dii",
      "package",
      "release"
    ],
    "contents": "\n\nContents\nald_demo gains a column, loses a column, and has two renamed\nald_demo gains a new sector hdv\n\nr2dii.data 0.2.0 is now on CRAN. This release fixes a number of bugs that you can learn about here; this post shows enhancements and new features.\nYou can install it from CRAN with:\ninstall.packages(\"r2dii.data\")\nThen use them with:\n\n\nlibrary(r2dii.data)\nlibrary(r2dii.match)\n\n\n\nThe most notable update in this release relates to changes in the demonstration dataset ald_demo. This data is meant to reflect a dataset that is provided to users by the organization Asset Resolution.\nald_demo gains a column, loses a column, and has two renamed\nald_demo gains the new column lei, loses the column is_ultimate_listed_owner, and has two columns renamed:\nid_company becomes company_id.\nald_emission_factor_unit becomes emission_factor_unit.\nThe new column lei contains fake legal entity identifiers for some companies in ald_demo:\n\n\nhead(unique(ald_demo$lei))\n\n\n#> NULL\n\nChanges to the other columns are simply cosmetic, and meant to better reflect the actual dataset that will be delivered to users.\nSince these fields are not currently used in the downstream packages r2dii.match and r2dii.analysis, it is not expected that this should negatively affect users in a significant way.\nald_demo gains a new sector hdv\nald_demo also gains datapoints relating to the newly added sector Heavy-Duty Vehicle (hdv).\n\n\nhead(ald_demo[ald_demo$sector == \"hdv\", ])\n\n\n#> # A tibble: 0 x 14\n#> # … with 14 variables: id_company <chr>, name_company <chr>,\n#> #   sector <chr>, technology <chr>, production_unit <chr>,\n#> #   year <int>, production <dbl>, emission_factor <dbl>,\n#> #   country_of_domicile <chr>, plant_location <chr>,\n#> #   is_ultimate_owner <lgl>, is_ultimate_listed_owner <lgl>,\n#> #   ald_timestamp <chr>, ald_emission_factor_unit <chr>\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-06-29T12:03:51-06:00",
    "input_file": "r2dii-data-0-2-0-is-now-on-cran.knit.md"
  },
  {
    "path": "posts/2021-01-21-retrospective-for-ds-incubator-meetups-in-2020/",
    "title": "The ds-incubator: Reflecting on 2020 to plan 2021",
    "description": "Responding to a group retrospective",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2021-01-21",
    "categories": [
      "ds-incubator",
      "community"
    ],
    "contents": "\n\nContents\nDecisions\nTrade-offs\nConclusion\nDiscussion\n\nThe first ds-incubator meetup of 2021 was a retrospective. I consulted 2DII folks on (a) what went well, (b) what didn’t go so well, and (c) how can the ds-incubator improve. I also asked if the ds-incubator had any effect in the way we now work at 2DII. Based on that feedback, here I present and discuss the decisions I made.\nDecisions\nNominate a timekeeper to help end on time.\nUse “round of voices” to encourage a critical discussion and practice dialogue1.\nAlthough stand-alone meetups are welcome, prefer meetup-series. This makes it easy for the leader to prepare and for attendees to follow. Regarding meetup-series:\nVote to choose the topic.\nDevelop a syllabus.\nStart each meetup reminding the syllabus and requirements (maybe none).\n\nDeprecate the use of labels “must-have” and “nice-to-have”. The practices project is a better alternative.\nDesign content as a demo rather than an interactive workshop.\nArticulate the relevance for the intended audience. Thrive to give concrete examples for 2DII.\nArticulate what the audience can do to learn more, e.g. where to find materials to reproduce the contents of the lesson.\nTrade-offs\nSchedule. Do not change the time/day for now. While it’d be great to move the meetup to avoid meetings back-to-back, I fear losing frequent attendees.\nDemos versus interactive-tutorials. There is good evidence showing that people learn better by doing something than by seeing someone else do something; yet, I trade the benefit of interactive lessons for the benefit of demos: covering more material in the same amount of time. This seems particularly appropriate given that the audience does not directly choose the meetup topic, and thus some topics they may only want to “hear about”. If they are indeed motivated, the demo should guide them to learn more.\nInteractive workshop. A longer workshop is an idea I like and developed (e.g. tidy-ds), but I think it complements rather than replace the ds-incubator. Workshops take a long time to prepare so they are a slower way to respond to “the challenge at hand” that we experience at 2DII.\nRelevance. It’s hard to develop an example that is realistic yet simple enough to not burry general concepts in specific details. Another challenge is that the intended audience is not just 2DII but also beyond. The broader relevance should make the content more appealing to you and me – to you because it’s a skill you can transfer elsewhere, and to me because content that helps folks outside 2DII allows me to give back to the R community what I learned from it.\nConclusion\nMeta. The retrospective helped me make informed decisions.\nStructure. Meetups could benefit from a bit more structure, and guide from the meetup template.\nRelevance. The effect of the ds-incubator seems to be not great on its own but important in adding to the compound effect of multiple efforts – of which the ds-incubator is only one.\nDiscussion\nThe retrospective finished with two round of voices: The first one to comment on what’s written above, and the second one to suggest meetup topics for 2021 – which I followed up with a poll on Slack.\n\nDialogue here is used as described in Crucial Conversations, where the pool of meaning expands when everyone shares their opinion, rather than keeping silent or getting violent.↩︎\n",
    "preview": "posts/2021-01-21-retrospective-for-ds-incubator-meetups-in-2020/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-07-r2dii-analysis-0-1-3-is-now-on-cran/",
    "title": "r2dii.data 0.1.6, r2dii.match 0.0.7 and r2dii.analysis 0.1.3 are now on CRAN",
    "description": "Squashing bugs before the holidays.",
    "author": [
      {
        "name": "Jackson Hoffart",
        "url": "https://github.com/jdhoffa"
      }
    ],
    "date": "2020-12-07",
    "categories": [
      "r2dii",
      "package"
    ],
    "contents": "\n\nContents\nr2dii.data 0.1.6\nr2dii.match 0.0.7\nr2dii.analysis 0.1.3\nAcknowledgements\n\nr2dii.data 0.1.6, r2dii.match 0.0.7 and r2dii.analysis 0.1.3 are now on CRAN. These releases fix a number of bugs. All changes are listed in the changelog at the website of each package (r2dii.data, r2dii.match, r2dii.analysis); this post highlights the major bugs fixes and feature additions.\nYou can update or install these packages from CRAN using:\ninstall.packages(\"r2dii.data\")\ninstall.packages(\"r2dii.match\")\ninstall.packages(\"r2dii.analysis\")\nTo use r2dii packages, you can load them into your active R session with library(). This example uses some other packages that you may also load now.\n\n\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(ggplot2)\nlibrary(r2dii.data)\nlibrary(r2dii.match)\nlibrary(r2dii.analysis)\n\n\n\nr2dii.data 0.1.6\nMost changes to r2dii.data are with updates to the internal region and classification files. In particular, the cnb_classification dataset was added, to facilitate the sector classification of Nigerian banks:\n\n\ncnb_classification %>% \n  filter(sector == \"aviation\") # show some illustrative results for aviation\n\n\n#> # A tibble: 2 x 5\n#>   original_code              code_level  code sector   borderline\n#>   <chr>                           <dbl> <dbl> <chr>    <lgl>     \n#> 1 TRANSPORTATION AND STORAGE          1  1800 aviation TRUE      \n#> 2 AIR TRANSPORT                       2  1804 aviation FALSE\n\nThe country code for Kosovo was also updated to the correct value of xk:\n\n\nfilter(iso_codes, country == \"kosovo\")\n\n\n#> # A tibble: 1 x 2\n#>   country country_iso\n#>   <chr>   <chr>      \n#> 1 kosovo  xk\n\nr2dii.match 0.0.7\nThe only user-facing change to r2dii.match was that match_name() gained the argument ... to pass arguments to stringdist::stringsim(). Most users won’t need this feature:\n\n\nmatched <- match_name(loanbook_demo, ald_demo)\n\nmatched %>% \n  filter(score != 1) %>% \n  select(name, name_ald, score)\n\n\n#> # A tibble: 30 x 3\n#>    name                         name_ald                         score\n#>    <chr>                        <chr>                            <dbl>\n#>  1 Yuama Inc.                   ykk usa, inc.                    0.843\n#>  2 Yukon Energy Corp 1736       yukon development corp           0.813\n#>  3 Yuanbsaoshan Power Generati… aba hydropower generation co ltd 0.809\n#>  4 Yuanbsaoshan Power Generati… yiyang baoyuan power generation… 0.849\n#>  5 Bhushan Energy Ltd.          bhagwan energy ltd.              0.906\n#>  6 York Research Corporation    yorkshire windpower limited      0.810\n#>  7 York Research Corporation    yorkshire water services ltd     0.815\n#>  8 York Research Corporation    york cogeneration corporation    0.832\n#>  9 Yolo Regional District       yolo county                      0.81 \n#> 10 Yit Corporation              international finance corp       0.804\n#> # … with 20 more rows\n\nHowever, advanced users can now specify many different parameters of the different methods available to stringdist::stringsim. For example, the q parameter of the qgram method can now be tweaked directly:\n\n\nmatched_qgram <- match_name(\n  loanbook_demo,\n  ald_demo, \n  method = \"qgram\",\n  q = 1.5\n)\n\nmatched_qgram %>% \n  filter(score != 1) %>% \n  select(name, name_ald, score)\n\n\n#> # A tibble: 11 x 3\n#>    name                             name_ald                     score\n#>    <chr>                            <chr>                        <dbl>\n#>  1 Yuamen Changyuan Hydropower Co.… yiyang baoyuan power genera… 0.825\n#>  2 China Electric Power (Fujian) D… yingjiang mingyu electric p… 0.826\n#>  3 China Electric Power (Fujian) D… nanchong electric power dev… 0.855\n#>  4 Yuexi County AAAA Xingguang Ele… yingjiang mengyuan electric… 0.838\n#>  5 Yuanbsaoshan Power Generation C… aba hydropower generation c… 0.830\n#>  6 Yuanbsaoshan Power Generation C… yiyang baoyuan power genera… 0.865\n#>  7 Bhushan Energy Ltd.              bhagwan energy ltd.          0.818\n#>  8 Cementos San Juan                cimento nassau               0.852\n#>  9 Qujing Cement                    quang tri cement             0.84 \n#> 10 Naphtha Israel Petroleum Corp L… japan petroleum exploration… 0.85 \n#> 11 Kinder Morgan Inc/De             diamondback energy inc       0.838\n\nFor more details see ?stringdist::stringsim.\nr2dii.analysis 0.1.3\nThere are a few major fixes in this release of r2dii.analysis, in particular to the functions target_market_share and target_sda.\nTo explain those bugfixes, let’s calculate some more demo data frames:\n\n\nvalidated_matched <- matched %>% \n  prioritize()\n\n# loan weighted portfolio-level results\nportfolio_market_share_targets <- target_market_share(\n  validated_matched,\n  ald_demo,\n  scenario_demo_2020,\n  region_isos_demo\n)\n\n# unweighted company-level results\ncompany_market_share_targets <- target_market_share(\n  validated_matched,\n  ald_demo,\n  scenario_demo_2020,\n  region_isos_demo,\n  by_company = TRUE,\n  weight_production = FALSE\n)\n\n\n\ntarget_market_share()\ntarget_market_share outputs a data frame with the value technology_share. This value is expected to always sum to 1 when aggregated across appropriate groupings (e.g. by sector, region, metric). Before, this was true only for results at company level, but not portfolio level. Now, this is fixed and technology_share sums to 1 at both levels (at least to 10 significant digits; further digits may be off due to rounding errors):\n\n\nportfolio_sum <- portfolio_market_share_targets %>%\n  group_by(sector, metric, region, year) %>%\n  summarize(share_sum = sum(technology_share), .groups = \"drop\")\n\n# true for all, to 10 significant digits\nall(round(portfolio_sum$share_sum, 10) == 1)\n\n\n#> [1] TRUE\n\n\ncompany_sum <- company_market_share_targets %>%\n  group_by(sector, metric, region, year, name_ald) %>%\n  summarize(share_sum = sum(technology_share), .groups = \"drop\")\n\n# true for all, to 10 significant digits\nall(round(company_sum$share_sum, 10) == 1)\n\n\n#> [1] TRUE\n\ntarget_sda()\nThe function target_sda calculates a target pathway for emission_factor by computing a convergence target to the year 2050, as detailed in this article. A bug in the function was causing this target to be calculated erroneously early, to the last year present in the input ald file.\nThe convergence targets are now correctly calculated to the final year present in the input scenario:\n\n\nmatched <- tibble::tribble(\n  ~id_loan, ~loan_size_outstanding, ~loan_size_outstanding_currency, ~loan_size_credit_limit, ~loan_size_credit_limit_currency, ~id_2dii, ~level, ~score, ~sector, ~name_ald, ~sector_ald,\n  \"L1\", 1, \"EUR\", 2, \"EUR\", \"UP1\", \"ultimate_parent\", 1, \"steel\", \"company a\", \"steel\"\n)\n\n# an ALD file with values only between 2020 and 2030\nald <- tibble::tribble(\n  ~name_company, ~sector, ~technology, ~year, ~production, ~emission_factor, ~plant_location, ~is_ultimate_owner,\n  \"company a\", \"steel\", \"steel\", 2020, 1, 1.5, \"DE\", TRUE,\n  \"company a\", \"steel\", \"steel\", 2025, 1, 1.5, \"DE\", TRUE,\n  \"company a\", \"steel\", \"steel\", 2030, 1, 1.5, \"DE\", TRUE,\n  \"company b\", \"steel\", \"steel\", 2020, 1, 2.5, \"DE\", TRUE,\n  \"company b\", \"steel\", \"steel\", 2025, 1, 2.5, \"DE\", TRUE,\n  \"company b\", \"steel\", \"steel\", 2030, 1, 2.5, \"DE\", TRUE\n)\n\n# a scenario file with targets at 2050\nco2_scenario <- tibble::tribble(\n  ~scenario_source, ~scenario, ~sector, ~region, ~year, ~emission_factor, ~emission_factor_unit,\n  \"etp_2017\", \"b2ds\", \"steel\", \"global\", 2020, 2, \"tonnes of CO2 per tonne of steel\",\n  \"etp_2017\", \"b2ds\", \"steel\", \"global\", 2025, 1.9, \"tonnes of CO2 per tonne of steel\",\n  \"etp_2017\", \"b2ds\", \"steel\", \"global\", 2030, 1.8, \"tonnes of CO2 per tonne of steel\",\n  \"etp_2017\", \"b2ds\", \"steel\", \"global\", 2050, 0.25, \"tonnes of CO2 per tonne of steel\",\n)\n\n# SDA portfolio-level results\nsda_targets <- target_sda(\n  matched,\n  ald,\n  co2_scenario\n)\n\nggplot(\n  data = sda_targets,\n  mapping = aes(\n    x = year,\n    y = emission_factor_value,\n    color = emission_factor_metric\n  )\n) +\n  geom_line() +\n  facet_wrap(~sector)\n\n\n\n\nAcknowledgements\n\n\n\nWhile this release includes commits from only a few of us (jdhoffa, maurolepore), it is thanks to feedback from our colleagues and users.\n\n\n\n",
    "preview": "posts/2020-12-07-r2dii-analysis-0-1-3-is-now-on-cran/distill-preview.png",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-09-08-r2dii-analysis-0-1-0-is-now-on-cran/",
    "title": "r2dii.analysis 0.1.0 is now on CRAN",
    "description": "This release includes a significant rework of the `target_sda()` function, and \nseveral bugfixes.",
    "author": [
      {
        "name": "Jackson Hoffart",
        "url": "https://github.com/jdhoffa"
      }
    ],
    "date": "2020-09-08",
    "categories": [
      "r2dii",
      "package",
      "release"
    ],
    "contents": "\nTable of Contents\nAcknowledgements\nr2dii.analysis 0.1.0 is now on CRAN. r2dii.analysis provides analysis tools to help you study how financial assets align to climate scenarios.\nThis release signals that r2dii.analysis is now maturing. You can install it from CRAN with:\n\ninstall.packages(\"r2dii.analysis\")\nThen use it with:\n\n\nlibrary(r2dii.analysis)\n\nLet’s also load the rest of the r2dii suite and the package dplyr, which is not necessary but convenient.\n\n\nlibrary(r2dii.data)\nlibrary(r2dii.match)\nlibrary(dplyr)\n\nAll user-facing changes are listed in the changelog; here I’ll show the most important ones.\nWe fixed a bug in the dataset target_sda(); it now outputs targets calculated using the ald-adjusted scenarios.\n\n\nmatch_result <- loanbook_demo %>%\n  match_name(ald_demo) %>%\n  prioritize()\n\n\n\nmatch_result %>%\n  target_sda(ald_demo, co2_intensity_scenario_demo)\n#> # A tibble: 208 x 4\n#>    sector      year emission_factor_metric emission_factor_value\n#>    <chr>      <dbl> <chr>                                  <dbl>\n#>  1 automotive  2002 projected                              0.228\n#>  2 automotive  2003 projected                              0.226\n#>  3 automotive  2004 projected                              0.224\n#>  4 automotive  2005 projected                              0.222\n#>  5 automotive  2006 projected                              0.220\n#>  6 automotive  2007 projected                              0.218\n#>  7 automotive  2008 projected                              0.216\n#>  8 automotive  2009 projected                              0.214\n#>  9 automotive  2010 projected                              0.212\n#> 10 automotive  2011 projected                              0.210\n#> # … with 198 more rows\n\nWe have also added the parameter weight_production to target_market_share(). This allows you to choose between outputting production values, weighted by relative loan size (weight_production = TRUE), or to output the actual raw company production values (weight_production = FALSE).\n\n\nweighted <- TRUE\n\nmatch_result %>%\n  target_market_share(\n    ald_demo,\n    scenario_demo_2020,\n    region_isos_demo,\n    weight_production = weighted\n  ) %>%\n  filter(metric == \"projected\")\n#> # A tibble: 234 x 8\n#>    sector technology  year region scenario_source metric production\n#>    <chr>  <chr>      <int> <chr>  <chr>           <chr>       <dbl>\n#>  1 autom… electric    2020 global demo_2020       proje…    145942.\n#>  2 autom… electric    2021 global demo_2020       proje…    148212.\n#>  3 autom… electric    2022 global demo_2020       proje…    150481.\n#>  4 autom… electric    2023 global demo_2020       proje…    152751.\n#>  5 autom… electric    2024 global demo_2020       proje…    155020.\n#>  6 autom… electric    2025 global demo_2020       proje…    157289.\n#>  7 autom… electric    2026 global demo_2020       proje…    159559.\n#>  8 autom… hybrid      2020 global demo_2020       proje…    141768.\n#>  9 autom… hybrid      2021 global demo_2020       proje…    138687.\n#> 10 autom… hybrid      2022 global demo_2020       proje…    135606.\n#> # … with 224 more rows, and 1 more variable: technology_share <dbl>\n\n\n\nraw <- FALSE\n\nmatch_result %>%\n  target_market_share(\n    ald_demo,\n    scenario_demo_2020,\n    region_isos_demo,\n    weight_production = raw\n  ) %>%\n  filter(metric == \"projected\")\n#> # A tibble: 234 x 8\n#>    sector technology  year region scenario_source metric production\n#>    <chr>  <chr>      <int> <chr>  <chr>           <chr>       <dbl>\n#>  1 autom… electric    2020 global demo_2020       proje…   6630404.\n#>  2 autom… electric    2021 global demo_2020       proje…   6731628.\n#>  3 autom… electric    2022 global demo_2020       proje…   6832852.\n#>  4 autom… electric    2023 global demo_2020       proje…   6934075.\n#>  5 autom… electric    2024 global demo_2020       proje…   7035299.\n#>  6 autom… electric    2025 global demo_2020       proje…   7136523.\n#>  7 autom… electric    2026 global demo_2020       proje…   7237746.\n#>  8 autom… hybrid      2020 global demo_2020       proje…   7009476.\n#>  9 autom… hybrid      2021 global demo_2020       proje…   6883774.\n#> 10 autom… hybrid      2022 global demo_2020       proje…   6758072.\n#> # … with 224 more rows, and 1 more variable: technology_share <dbl>\n\nAcknowledgements\n\n\n\nWhile this release includes commits from only a few of us (jdhoffa, maurolepore), it is thanks to ideas and feedback from many more colleagues at 2DII – particularly George Harris.\n\n\n",
    "preview": "posts/2020-09-08-r2dii-analysis-0-1-0-is-now-on-cran/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-08-14-r2dii-data-0-1-2-and-r2dii-match-0-0-4-are-now-on-cran/",
    "title": "r2dii.data 0.1.2 and r2dii.match 0.0.4 are now on CRAN",
    "description": "Less bugs and more features",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-08-14",
    "categories": [
      "r2dii",
      "software development",
      "release"
    ],
    "contents": "\nTable of Contents\nr2dii.data 0.1.2\nr2dii.match 0.0.4\nAcknowledgements\nr2dii.data 0.1.2 and r2dii.match 0.0.4 are now on CRAN. These packages provide datasets and tools to align financial markets to climate goals. These releases fix a number of bugs that you can learn about here and here; this post shows enhancements and new features.\nYou can install r2dii.data and r2dii.match from CRAN with:\n\ninstall.packages(\"r2dii.data\")\ninstall.packages(\"r2dii.match\")\nThen use them with:\n\n\nlibrary(r2dii.data)\nlibrary(r2dii.match)\n\nr2dii.data 0.1.2\nr2dii.data 0.1.2 includes two new dataset – green_or_brown, and sic_classification (thanks to Daisy Pacheco and George Harris).\n\n\ngreen_or_brown\n#> # A tibble: 16 x 3\n#>    sector       technology    green_or_brown\n#>    <chr>        <chr>         <chr>         \n#>  1 automotive   electric      green         \n#>  2 automotive   hybrid        green         \n#>  3 automotive   ice           brown         \n#>  4 automotive   fuelcell      green         \n#>  5 power        hydrocap      green         \n#>  6 power        renewablescap green         \n#>  7 power        coalcap       brown         \n#>  8 power        gascap        brown         \n#>  9 power        oilcap        brown         \n#> 10 power        nuclearcap    green         \n#> 11 oil and gas  oil           brown         \n#> 12 oil and gas  gas           brown         \n#> 13 coal         coal          brown         \n#> 14 fossil fuels oil           brown         \n#> 15 fossil fuels gas           brown         \n#> 16 fossil fuels coal          brown\n\nsic_classification\n#> # A tibble: 256 x 4\n#>    code  description                              sector    borderline\n#>    <chr> <chr>                                    <chr>     <lgl>     \n#>  1 0     private households, exterritorial organ… not in s… FALSE     \n#>  2 00000 private households, exterritorial organ… not in s… FALSE     \n#>  3 11110 growing of cereals and other crops n.e.… not in s… FALSE     \n#>  4 11130 growing of fruit, nuts, beverage and sp… not in s… FALSE     \n#>  5 11210 farming  of cattle, sheep, goats, horse… not in s… FALSE     \n#>  6 11300 growing of crops combined with farming … not in s… FALSE     \n#>  7 12100 forestry and related services            not in s… FALSE     \n#>  8 12200 logging and related services             not in s… FALSE     \n#>  9 13100 ocean and coastal fishing                not in s… FALSE     \n#> 10 21000 mining of coal and lignite               coal      FALSE     \n#> # … with 246 more rows\n\nAlso, region_isos gained data from ETP 2017, and ald_demo dropped the column number_of_assets (thanks to Taylor Posey).\n\n\nunique(region_isos$source)\n#> [1] \"weo_2019\" \"etp_2017\"\n\nany(grepl(\"number_of_assets\", names(ald_demo)))\n#> [1] FALSE\n\nr2dii.match 0.0.4\nmatch_name() now outputs a new column – borderline. This column helps you measure how much of your loanbook matched some asset; see the new article Calculating matching coverage.\n\n\nloanbook <- loanbook_demo\nald <- ald_demo\n\nmatched <- match_name(loanbook, ald)\ntail(names(matched))\n#> [1] \"sector_ald\" \"name\"       \"name_ald\"   \"score\"      \"source\"    \n#> [6] \"borderline\"\n\nAlso, match_name() now runs faster and uses less memory. This responds to users’s feedback, diligently managed by George Harris – thanks! If you still run out of memory, read Using match_name() with large loanbooks: How to resolve memory issues and Improving r2dii.match: How to work with big data, and benchmarks of a more efficient version of match_name(). You may also want to reduce the size of your data: use the new function crucial_lbk() to select the minimum columns you need for match_name().\n\n\nncol(loanbook)\n#> [1] 19\n\ncrucial_lbk()\n#> [1] \"id_ultimate_parent\"                    \n#> [2] \"name_ultimate_parent\"                  \n#> [3] \"id_direct_loantaker\"                   \n#> [4] \"name_direct_loantaker\"                 \n#> [5] \"sector_classification_system\"          \n#> [6] \"sector_classification_direct_loantaker\"\n\nsmaller_loanbook <- loanbook[crucial_lbk()]\nncol(smaller_loanbook)\n#> [1] 6\n\nmatch_name(smaller_loanbook, ald)\n#> # A tibble: 497 x 15\n#>    id_ultimate_par… name_ultimate_p… id_direct_loant… name_direct_loa…\n#>    <chr>            <chr>            <chr>            <chr>           \n#>  1 UP15             Alpine Knits In… C294             Yuamen Xinneng …\n#>  2 UP288            University Of I… C292             Yuama Ethanol L…\n#>  3 UP104            Garland Power &… C305             Yukon Energy Co…\n#>  4 UP104            Garland Power &… C305             Yukon Energy Co…\n#>  5 UP83             Earthpower Tech… C304             Yukon Developme…\n#>  6 UP83             Earthpower Tech… C304             Yukon Developme…\n#>  7 UP163            Kraftwerk Mehru… C303             Yueyang City Co…\n#>  8 UP138            Jai Bharat Gum … C301             Yuedxiu Corp One\n#>  9 UP32             Bhagwan Energy … C302             Yuexi County AA…\n#> 10 UP81             Dynegy Midwest … C309             Yuxi ounty Liua…\n#> # … with 487 more rows, and 11 more variables:\n#> #   sector_classification_system <chr>,\n#> #   sector_classification_direct_loantaker <dbl>, id_2dii <chr>,\n#> #   level <chr>, sector <chr>, sector_ald <chr>, name <chr>,\n#> #   name_ald <chr>, score <dbl>, source <chr>, borderline <lgl>\n\nAcknowledgements\n\n\n\nWhile this release includes commits from only a few of us (jdhoffa, maurolepore), it is thanks to feedback from our colleagues and users.\n\n\n",
    "preview": "posts/2020-08-14-r2dii-data-0-1-2-and-r2dii-match-0-0-4-are-now-on-cran/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-07-31-chunk-your-data/",
    "title": "Using `match_name()` with large loanbooks",
    "description": "How to resolve memory issues",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-07-31",
    "categories": [
      "r2dii",
      "programming",
      "favorites"
    ],
    "contents": "\nUsers of the r2dii.match package reported that their R session crashed when they fed match_name() with big data. A recent post acknowledged the issue and promised examples on how to handle big data. This article shows one approach: feed match_name() with a sequence of small chunks of the loanbook dataset.\nSetup\nThis example uses r2dii.match plus a few optional but convenient packages, including r2dii.data for example datasets.\n\n\n# Packages\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(fs)\nlibrary(vroom)\nlibrary(r2dii.data)\nlibrary(r2dii.match)\n\n# Example datasets from the r2dii.data package\nloanbook <- loanbook_demo\nald <- ald_demo\n\nIf the entire loanbook is too large, feed match_name() with smaller chunks, so that any call to match_name(this_chunk, ald) fits in memory. More chunks take longer to run but use less memory; you’ll need to experiment to find the number of chunks that best works for you.\nSay you try three chunks. You can take the loanbook dataset and then use mutate() to add the new column chunk, which assigns each row to one of the chunks:\n\n\nchunks <- 3\nchunked <- loanbook %>% mutate(chunk = as.integer(cut(row_number(), chunks)))\n\nThe total number of rows in the entire loanbook equals the sum of the rows across chunks.\n\n\ncount(loanbook)\n#> # A tibble: 1 x 1\n#>       n\n#>   <int>\n#> 1   320\n\ncount(chunked, chunk)\n#> # A tibble: 3 x 2\n#>   chunk     n\n#>   <int> <int>\n#> 1     1   107\n#> 2     2   106\n#> 3     3   107\n\nFor each chunk you need to repeat this process:\nMatch this chunk against the entire ald dataset.\nIf this chunk matched nothing, move to the next chunk.\nElse, save the result to a .csv file.\n\n\n# This \"output\" directory is temporary; you may use any folder in your computer\nout <- path(tempdir(), \"output\")\nif (!dir_exists(out)) dir_create(out)\n\nfor (i in unique(chunked$chunk)) {\n  # 1. Match this chunk against the entire `ald` dataset.\n  this_chunk <- filter(chunked, chunk == i)\n  this_result <- match_name(this_chunk, ald)\n  \n  # 2. If this chunk matched nothing, move to the next chunk\n  matched_nothing <- nrow(this_result) == 0L\n  if (matched_nothing) next()\n  \n  # 3. Else, save the result to a .csv file.\n  vroom_write(this_result, path(out, paste0(i, \".csv\")))\n}\n\nThe result is one .csv file per chunk.\n\n\ndir_ls(out)\n#> /tmp/Rtmp2sVXnU/output/1.csv /tmp/Rtmp2sVXnU/output/2.csv \n#> /tmp/Rtmp2sVXnU/output/3.csv\n\nYou can read and combine all files in one step with vroom().\n\n\nmatched <- vroom(dir_ls(out))\nmatched\n#> # A tibble: 502 x 29\n#>    rowid id_loan id_direct_loant… name_direct_loa… id_intermediate…\n#>    <dbl> <chr>   <chr>            <chr>            <chr>           \n#>  1     1 L1      C294             Yuamen Xinneng … <NA>            \n#>  2     3 L3      C292             Yuama Ethanol L… IP5             \n#>  3     3 L3      C292             Yuama Ethanol L… IP5             \n#>  4     5 L5      C305             Yukon Energy Co… <NA>            \n#>  5     5 L5      C305             Yukon Energy Co… <NA>            \n#>  6     6 L6      C304             Yukon Developme… <NA>            \n#>  7     6 L6      C304             Yukon Developme… <NA>            \n#>  8     8 L8      C303             Yueyang City Co… <NA>            \n#>  9     9 L9      C301             Yuedxiu Corp One IP10            \n#> 10    10 L10     C302             Yuexi County AA… <NA>            \n#> # … with 492 more rows, and 24 more variables:\n#> #   name_intermediate_parent_1 <chr>, id_ultimate_parent <chr>,\n#> #   name_ultimate_parent <chr>, loan_size_outstanding <dbl>,\n#> #   loan_size_outstanding_currency <chr>,\n#> #   loan_size_credit_limit <dbl>,\n#> #   loan_size_credit_limit_currency <chr>,\n#> #   sector_classification_system <chr>,\n#> #   sector_classification_input_type <chr>,\n#> #   sector_classification_direct_loantaker <dbl>, fi_type <chr>,\n#> #   flag_project_finance_loan <chr>, name_project <lgl>,\n#> #   lei_direct_loantaker <lgl>, isin_direct_loantaker <lgl>,\n#> #   chunk <dbl>, id_2dii <chr>, level <chr>, sector <chr>,\n#> #   sector_ald <chr>, name <chr>, name_ald <chr>, score <dbl>,\n#> #   source <chr>\n\nThe matched result should be similar to that of match_name(loanbook, ald). Your next steps are documented on the website of r2dii.match.\nAnecdote\nI tested match_name() with datasets which size (on disk as a .csv file) was 20MB for the loanbook dataset and 100MB for the ald dataset. Feeding match_name() with the entire loanbook crashed my R session. But feeding it with a sequence of 30 chunks run in about 25’ – successfully; the combined result had over 10 million rows:\n\nsector                       data\n---------------------------------\n1 automotive     [2,644,628 × 15]\n2 aviation         [377,200 × 15]\n3 cement           [942,526 × 15]\n4 oil and gas    [1,551,805 × 15]\n5 power          [7,353,772 × 15]\n6 shipping       [4,194,067 × 15]\n7 steel                 [15 × 15]\n\n\n",
    "preview": "posts/2020-07-31-chunk-your-data/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-07-28-what-and-how-to-submit-your-post/",
    "title": "Publish your post here",
    "description": "Details on what and how to submit a new blog post",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-07-28",
    "categories": [
      "meta",
      "ds-incubator"
    ],
    "contents": "\nThe first post on this blog encouraged you to submit your own posts; but the advice was vague about what to submit or how. This post makes the advice concrete.\nWhat to submit\nEach published article needs only two things:\nA title, e.g. “Publish your post here”.\nA body, i.e. the contents of your post.\nAnd it is nice to have a few optional things:\nA description, e.g. “Details on what and how to submit a new blog post”.\nA link to your website, e.g. https://github.com/maurolepore.\nAn image that is licensed to share publicly, e.g. from https://www.pexels.com/creative-commons-images/.\nOne or more categories to help readers filter similar posts, e.g. “meta”.\nMost of this is just plain text, which is easy to submit for publication in a number of ways.\nHow to submit\nThe priority is to publish your content; how you do it is unimportant – you may submit it however you like. For example, here are some ways:\nSlack: Send me or Jackson a file via Slack with your text or a link to it (e.g. a link to a Google Doc).\nGitHub: On GitHub, create a new file and paste your text in it.\n\nGitHub will automatically fork the blog’s repo into your user account and guide you to create a pull request.\n\nRStudio: Fork the blog’s repo; create a new RStudio project from your fork; create a new post with distill::create_post(); commit your changes; push your commits to your fork; submit a pull request to the blog.\ndistill::create_post() gives you a template you can then modify. For consistency across posts, we recommend you change the template’s yaml header and setup chunk to follow this examples:\nYAML header\n\n---\ntitle: \"Publish your post here\"\ndescription: |\n  Details on what and how to submit a new blog post\nauthor:\n  - name: Mauro Lepore\n    url: https://github.com/maurolepore\ndate: 07-28-2020\noutput: \n  distill::distill_article:\n  toc: true\n  self_contained: true\ncategories:\n  - meta\n  - ds-incubator\npreview: preview.jpg\ntwitter:\n  site: \"@mauro_lepore\"\n  creator: \"@mauro_lepore\"\n---\nSetup chunk\n\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\"\n)\n–\nAs far as the world can tell, your work or ideas do not exist unless they are published somewhere. Get stuff out. The technical details don’t matter (we’ll help you with that); what matters is your idea – share it early, share it often.\n\n\n",
    "preview": "posts/2020-07-28-what-and-how-to-submit-your-post/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-07-27-config-project-settings/",
    "title": "PACTA_analysis - New config file: project_settings",
    "description": "This post outlines the changes of the workflow in the PACTA_analysis repository. Everyone who works with this repository is encouraged to read this.",
    "author": [
      {
        "name": "Jacob Kastl",
        "url": "https://github.com/jacobvjk"
      }
    ],
    "date": "2020-07-27",
    "categories": [
      "programming",
      "PACTA_analysis"
    ],
    "contents": "\nTarget Audience\nEveryone who uses the PACTA_analysis script for their projects.\nWhat changed\nThe workflow for initializing a project has changed. A new required config file must be used and was added to the repo.\nSpecifics\nProject wide settings should be set in the file “project_settings.yml”, prior to project initialization:\n\n    project_name: name_of_the_project_folder\nPlease define project_name. The project name is relevant for input, output and naming of data files.\n\n    project_internal:\n      twodii_internal: FALSE\nEnsure that the variable twodii_internal is set FALSE. Value should only be set to TRUE for 2DII internal staff.\n\n  project_internal:\n    ...\n    project_location_ext: ~/path/to/project\nPlease define project_location_ext by copying the full path to the folder, in which you want to store data (including the results) related to this particular evaluation. During the run of the code, the a project folder with several sub-folders will be created here.\nPlease consider:\ncopying in a path from windows requires to change all “\\” to “/” (e.g. \"C:/Users/Desktop/project_folder/).\npath needs to be a string (“…”).\n\n\n  project_internal:\n    ...\n    data_location_ext: ~/path/to/data\nPlease define data_location_ext by copying the full path to the folder, in which you stored the data files (set of rda files) provided by Asset Resolution or the 2DII.\nPlease consider:\ncopying in a path from windows requires to change all “\\” to “/”.\npath needs to be a string (“…”).\n\nIf you have any other questions regarding how this affects your workflow, please consult the README.Rmd file in the PACTA_analysis portfolio https://github.com/2DegreesInvesting/PACTA_analysis or contact me (Jacob), Jackson or Clare.\n\n\n",
    "preview": "posts/2020-07-27-config-project-settings/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-07-25-gh-flow/",
    "title": "GitHub flow",
    "description": "Submit pull requests from any branch -- except master",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-07-25",
    "categories": [
      "other",
      "community"
    ],
    "contents": "\nIf your team uses the GitHub flow, you should submit your pull requests from any branch – except master. The reasons are not immediately obvious. This post explains why violating the GitHub flow sometimes gives you no trouble, while other times it leaves you a mess.\nSay you want to contribute to a project – let’s call it upstream. You don’t own upstream, so you can’t push commits to upstream/master, the branch master of the project upstream. That’s okay: you can still submit a pull request from your fork of upstream – let’s call it origin.\nAs you do own origin, can you push commits to origin/master then submit a pull request into upstream/master? Yes, you “can”; but that is a bad idea.\nConsider this example. After you forked upstream, you add two commits to origin/master and submit your first pull request into upstream/master. This goes smoothly.\nBut soon the history of origin and upstream start to diverge – and you may not even notice. The maintainer squashed your two commits into a new, single commit that tells the story of your pull request more succinctly. The Git history of both repos – origin and upstream – is already different. And it gets worse: Other people’s pull-requests are also merged into upstream/master, and it now has changes that your origin/master lacks.\nYour second pull request exposes the problem. You add a new commit to origin/master and submit another pull request into upstream/master. Now you’ve got a mess: Although they had been merged, the commits you submitted before still show up in this second pull request; and the commits you lack cause merge conflicts with your new commits on this pull request.\nAvoid the mess. Just remember to submit your pull requests from any branch – except master. For R users it gets better: the pull-request helpers from the usethis package implement the GitHub flow automatically. Too often to “just remember” doesn’t work. Instead it’s best to use systems that automatically enforce the behaviour you want to display. Why not automate repetitive tasks like pull requests?\n\n\n",
    "preview": "posts/2020-07-25-gh-flow/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-07-24-when-scenarios-and-reality-diverge/",
    "title": "When Scenarios and Reality Diverge",
    "description": "A deep dive into IEA scenarios.",
    "author": [
      {
        "name": "Vincent Jerosch-Herold",
        "url": "https://github.com/vintented"
      }
    ],
    "date": "2020-07-24",
    "categories": [
      "other",
      "scenarios"
    ],
    "contents": "\nTable of Contents\nContext\nData preperation\nData comparison\nConclusions\nContext\nA scenario lays-out an ‘evolution’ of the world. In financial markets this evolution reflects current and future capital flows within and across sectors as high-carbon technologies are replaced with low-carbon. Scenario analysis is simply the process of scaling and allocating scenario macro changes to the micro — the economic activities linked to financial portfolios. The scenario alignment of a portfolio is simply the divergence overtime between the portfolio’s baseline (e.g. the portfolio’s \\(CO_2\\) intensity over the analysis time-horizon) and the scaled ambition of the scenario (see Figure 1).\n\n\n\nThe scaled trajectory of a scenario suggests that a portfolio is consistent with a scenario when the evolution of the indicator (e.g. \\(CO_2\\) intensity) is consistent with what the scenario prescribes. What this entails in practice is from the portfolio’s current baseline (e.g. \\(CO_2\\) intensity in 2020), indexing the scenario changes from that baseline over the entire scenario’s time horizon. This ensures the differing scopes of the scenario (i.e. macro-economy model) and portfolio (i.e. a specific subset of macro-economic activities) can be bridged by ensuring equal ambition regardless of scope. However, a portfolio’s current baseline is not always consistent with the evolution of a scenario — the International Energy Agency’s (IEA) Energy Technology Perspective (ETP) illustrates this point apptly.(IEA 2017)\nETP 2017 roadmaps a global energy transition that begins in 2014 along three scenario sets, RTS (Reference Technology Scenario), SDS (Sustainable Development Scenario), and B2DS (Beyond 2 Degrees Scenario) (in order of ambition).(IEA 2017) Each scenario proscribes a set of socioeconomic developments informed by the varying potential of low-carbon technologies to reduce emissions across sectors. These reductions are mapped in terms of the shift from high to low-carbon technologies in units of production or capacity (e.g. TWh, tonnes of steel, etc.).\nHowever, if the current state of the world is any indication, a global, cross-sector energy transition has yet take place.(IPCC 2018) To illustrate this point, the IEA assumes that in 2020 the direct \\(CO_2\\) intensity of global steel production has declined by ~20% under ETP’s B2DS.(IEA 2017) In reality, the global \\(CO_2\\) intensity of steel production from 2014 to 2020 has not significantly deviated from \\(1.85 \\ kg \\ CO_2 \\ per \\ kg \\ steel\\).(World Steel Association 2019) In effect, The evolution of the scenario and the macro-economy differ, and the longer global emissions continue to rise, the greater the disconnect. And this temporal and evolutionary disconnect between the portfolio (a subset of macro-economic activities) and scenario has implications on the scaled scenario ambition assigned to the portfolio.\nData preperation\nThe input data is simply the CO2 intensity for Cement (scope 1 & 2), Steel (scope 1 & 2), and Aviation (scope 1) from ETP 2017.(IEA 2017)\n\n\n# packages\nlibrary(gt)\nlibrary(tidyverse)\n# themes \nsource(\"ggplot_themes.R\")\n# data\netp2017_sda_targets <- readr::read_csv(\"sda_scenario_targets.csv\")\netp2017_sda_targets_interprolated <- readr::read_csv(\"sda_scenario_targets_interpolated.csv\")\n# functions\nindex_market_to_scenario <- function(\n  scenario,\n  aviation_intensity = 87.9,\n  steel_intensity = 1.8, \n  cement_intensity = 0.6\n) {\n  year_seq <- unique(scenario$year)\n  lagged_scenario <- map(\n    2:length(year_seq),\n    function(i) {\n      scenario %>% \n        select(\n          scenario, \n          sector, \n          year, \n          emission_factor\n        ) %>% \n        group_by(\n          scenario, \n          sector\n        ) %>% \n        mutate(\n          index = ifelse(!year %in% year_seq[1:(i-1)], emission_factor, NA_integer_) / sum(ifelse(year == year_seq[i], emission_factor, 0)),\n          emission_factor_ald = case_when(\n            sector == \"aviation\" ~ aviation_intensity * index, \n            sector == \"steel\" ~ steel_intensity * index, \n            sector == \"cement\" ~ cement_intensity * index\n          ),\n          lag = paste(\"Lag\", (i-1))\n        ) %>% \n        filter(!is.na(index)) %>% \n        rename(emission_factor_scenario = emission_factor) %>% \n        ungroup()\n    }\n  )\n  # bind lags together \n  lagged_scenario %>% \n    bind_rows()\n}\nadd_nice_names <- function(data) {\n  data %>% \n    mutate(\n      scenario = toupper(scenario), \n      sector = stringr::str_to_title(sector)\n    )\n}\n\n\n\ntable_data <- etp2017_sda_targets %>% \n  add_nice_names() %>% \n  group_by(\n    sector, \n    emission_factor_unit\n  ) %>% \n  summarise(\n    Min = min(emission_factor), \n    Max = max(emission_factor)\n  ) %>%\n  ungroup()\n\ntable_data %>% \n  rename(\n    Sector = sector, \n    Unit = emission_factor_unit\n  ) %>% \n  gt() %>% \n  theme_2dii_gt() %>% \n  tab_header(\n    title = \"Table 1: A brief overview of units\",\n    subtitle = \"CO2 intensity\"\n  )\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#qfysgmfoos .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #1b324f;\n  font-size: 12px;\n  background-color: white;\n  width: 90%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: white;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#qfysgmfoos .gt_heading {\n  background-color: white;\n  text-align: center;\n  border-bottom-color: white;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: white;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: white;\n}\n\n#qfysgmfoos .gt_title {\n  color: #1b324f;\n  font-size: 20px;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: white;\n  border-bottom-width: 0;\n}\n\n#qfysgmfoos .gt_subtitle {\n  color: #1b324f;\n  font-size: 14px;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: white;\n  border-top-width: 0;\n}\n\n#qfysgmfoos .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #1b324f;\n}\n\n#qfysgmfoos .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: white;\n  border-bottom-style: solid;\n  border-bottom-width: 5px;\n  border-bottom-color: #1b324f;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: white;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: white;\n}\n\n#qfysgmfoos .gt_col_heading {\n  color: #1b324f;\n  background-color: white;\n  font-size: 15.5px;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#qfysgmfoos .gt_column_spanner_outer {\n  color: #1b324f;\n  background-color: white;\n  font-size: 15.5px;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#qfysgmfoos .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#qfysgmfoos .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#qfysgmfoos .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 5px;\n  border-bottom-color: #1b324f;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#qfysgmfoos .gt_group_heading {\n  padding: 8px;\n  color: #1b324f;\n  background-color: white;\n  font-size: 14px;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #1b324f;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #1b324f;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#qfysgmfoos .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #1b324f;\n  background-color: white;\n  font-size: 14px;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #1b324f;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #1b324f;\n  vertical-align: middle;\n}\n\n#qfysgmfoos .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#qfysgmfoos .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#qfysgmfoos .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#qfysgmfoos .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #1b324f;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #1b324f;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #1b324f;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#qfysgmfoos .gt_stub {\n  color: #1b324f;\n  background-color: white;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#qfysgmfoos .gt_summary_row {\n  color: #1b324f;\n  background-color: white;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qfysgmfoos .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#qfysgmfoos .gt_grand_summary_row {\n  color: #1b324f;\n  background-color: white;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qfysgmfoos .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#qfysgmfoos .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: white;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #1b324f;\n}\n\n#qfysgmfoos .gt_footnotes {\n  color: #1b324f;\n  background-color: white;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qfysgmfoos .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#qfysgmfoos .gt_sourcenotes {\n  color: #1b324f;\n  background-color: white;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qfysgmfoos .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#qfysgmfoos .gt_left {\n  text-align: left;\n}\n\n#qfysgmfoos .gt_center {\n  text-align: center;\n}\n\n#qfysgmfoos .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#qfysgmfoos .gt_font_normal {\n  font-weight: normal;\n}\n\n#qfysgmfoos .gt_font_bold {\n  font-weight: bold;\n}\n\n#qfysgmfoos .gt_font_italic {\n  font-style: italic;\n}\n\n#qfysgmfoos .gt_super {\n  font-size: 65%;\n}\n\n#qfysgmfoos .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\nTable 1: A brief overview of units\n    CO2 intensity\n    Sector\n      Unit\n      Min\n      Max\n    Aviation\n      grams CO2 (scope 1) per passenger-km\n      12.02445334\n      122.5599610\n    Cement\n      tonnes CO2 (scope 1 & 2) per tonne cement\n      0.09386214\n      0.5959728\n    Steel\n      tonnes CO2 (scope 1 & 2) per tonne crude steel\n      0.08728846\n      1.8990379\n    \n\n\nScope 2 emissions are calculated using the average emissions intensity of global power generation and electricity energy demand from the Steel and Cement sectors. For Aviation, only the emissions from the combustion of Jet-fuel (scope 1) are considered.\nE.g. Steel scope 2 emissions: \\[ Power \\ Emissions \\ _{CO_2 \\ Mt} = \\frac{Electricity \\ Demand \\ _{PJ}} {3600} \\ *  Power \\ Emissions \\ Intensity \\ _{\\frac{CO_2 \\ {Mt}} {MWh}}\\]\nWith the electricy energy demand and electricity CO2 intensity, the scope 2 emissions intensity per unit of output (e.g. tonnes of Steel) can be calculated. Scope 1 emissions are calculated by dividing direct CO2 emissions per unit of product.\nE.g. Steel CO2 intensity: \\[ Emissions \\ Intensity \\ _{\\frac{CO_2 \\ {Mt}} {Crude \\ Steel \\ Mt }} = \\sum {\\frac{Direct \\ Emissions \\ _{CO_2 \\  Mt}} {Production \\ _{Crude \\ Steel \\ Mt}}} \\]\nData comparison\nPerhaps it nice to begin by simply comparing the \\(CO_2\\) intensity across scenarios and sectors. Figure 2 illustrates the previously mentioned difference in terms of ambition across the three ETP scenario sets with the B2DS following the most ambitious emissions intensity reduction path and the RTS following the least ambitious path.(IEA 2017)\n\n\netp2017_sda_targets %>% \n  add_nice_names() %>% \n  ggplot(aes(x = year, y = emission_factor, color = scenario, group = scenario)) +\n  geom_line() + \n  labs(x = \"Year\", y = \"\", title = \"Figure 2: Scenario CO2 intensity by sector\") + \n  scale_color_manual(values = c(primary_green, primary_orange, primary_blue)) + \n  facet_grid(\n    rows = vars(sector), \n    switch = 'y',\n    scales = \"free_y\", \n    labeller = as_labeller(c(Steel = \"t CO2 per t steel\", Cement = \"t CO2 per t cement\", Aviation = \"g CO2 per PKM\"))\n  ) + \n  theme_2dii_ggplot() + \n  theme(strip.placement = 'outside')\n\n\nTo compare apples to apples Figure 3 illustrates the difference across scenarios and sectors indexed to the base year 2014.\n\n\n# calculate index \nchart_data <- etp2017_sda_targets %>% \n  group_by(\n    scenario, \n    sector\n  ) %>% \n  mutate(index = 100 * (emission_factor / sum(ifelse(year == min(year), emission_factor, 0)))) %>% \n  ungroup()\n# plot data \nchart_data %>% \n  add_nice_names() %>% \n  ggplot(aes(x = year, y = index, color = scenario, group = scenario)) +\n  geom_line() + \n  labs(x = \"Year\", y = \"Indexed CO2 intensity\", title = \"Figure 3: Indexed scenario CO2 intensity by sector\") + \n  scale_color_manual(values = c(primary_green, primary_orange, primary_blue)) + \n  facet_grid(rows = vars(sector), scales = \"free_y\") + \n  theme_2dii_ggplot()\n\n\nHaving compared how the \\(CO_2\\) intensity evolves over the scenario’s time horizon, it is perhaps of interest to understand the distribution of these cumulative changes. Figure 4 shows the annual rate of change in \\(CO_2\\) intensity as a percent of the total change in \\(CO_2\\) intensity over the scenario’s time horizon. Depending on the scenario’s ambition and the sector, these emissions intensity reductions vary in distribution. Both B2DS and SDS follow relatively similar distributions with the rate change following a comparable trajectory until mid-century when the curve flattens out. This trend reflects the “hard to decarbonize” nature of industrial processes and Aviation, where progress will likely be incremental, unlike transformational changes in other sectors like Power.\n\n\n# calculate metrics \nchart_data <- etp2017_sda_targets %>% \n  group_by(\n    scenario, \n    sector\n  ) %>% \n  mutate(\n    total_change = first(emission_factor) - last(emission_factor), \n    annual_change =  lag(emission_factor, n = 1L) - emission_factor, \n    percent_of_total_change = annual_change / total_change\n  ) %>% \n  ungroup()\n# calculate cumsum \nchart_data <- chart_data %>% \n  filter(!is.na(percent_of_total_change)) %>% \n  group_by(\n    scenario, \n    sector\n  ) %>% \n  arrange(year, by_group = TRUE) %>% \n  mutate(cumsum_of_percent_of_total_change = cumsum(percent_of_total_change)) %>% \n  distinct(\n    year, \n    scenario, \n    sector, \n    cumsum_of_percent_of_total_change\n  ) %>% \n  ungroup()\n# create baseline \nchart_data <- chart_data %>% \n  distinct(\n    scenario, \n    sector\n  ) %>% \n  mutate(\n    year = 2014, \n    cumsum_of_percent_of_total_change = 0 \n  ) %>% \n  bind_rows(chart_data)\n# plot chart \nchart_data %>% \n  add_nice_names() %>% \n  ggplot(aes(x = year, y = cumsum_of_percent_of_total_change, fill = scenario, color = scenario)) +\n  geom_area(alpha = 0.2) +\n  geom_line() +\n  theme_2dii_ggplot() + \n  scale_color_manual(values = c(primary_green, primary_orange, primary_blue)) +  \n  scale_fill_manual(values = c(primary_green, primary_orange, primary_blue)) +  \n  scale_y_continuous(labels = scales::label_percent()) + \n  facet_grid(rows = vars(sector), cols = vars(scenario), scales = \"free_y\") + \n  labs(x = \"Year\", y = \"Cumulative percent change\", title = \"Figure 4: Cumulative emissions reductions\")\n\n\nInspired by a similar chart from the SENSE project, Figure 5 shows the change in \\(CO_2\\) intensity trajectories over 5-year increments across sectors and scenarios.(PIK, IIASA, and SEI 2020) If each line represents a hypotenuse with the x and y-axis representing the adjacent and opposite sides, the longer the hypotenuse, the greater the emission intensity reductions over the 5-year increment.\n\n\n# create year intervals \nchart_data <- etp2017_sda_targets_interprolated %>% \n  mutate(\n    year_range = case_when(\n      between(year, 2014, 2025) ~ \"2014-2025\",\n      between(year, 2025, 2030) ~ \"2025-2030\",\n      between(year, 2030, 2035) ~ \"2030-2035\",\n      between(year, 2035, 2040) ~ \"2035-2040\",\n      between(year, 2040, 2045) ~ \"2040-2045\",\n      between(year, 2045, 2050) ~ \"2045-2050\",\n      between(year, 2050, 2055) ~ \"2050-2055\",\n      between(year, 2055, 2060) ~ \"2055-2060\"\n    )\n  )\n# calculate first last ratios \nchart_data <- chart_data %>% \n  group_by(\n    scenario, \n    sector, \n    year_range\n  ) %>% \n  mutate(\n    start_value = first(emission_factor) / last(emission_factor),\n    end_value = last(emission_factor) / first(emission_factor)\n  ) %>% \n  distinct(\n    scenario, \n    sector, \n    year_range, \n    start_value, \n    end_value\n  ) %>% \n  ungroup()\n# pivot wider \nchart_data <- chart_data %>% \n  pivot_longer(\n    cols = c(\"start_value\", \"end_value\"), \n    names_to = \"start_end\", \n    values_to = \"trajectory\"\n  ) \n# plot chart\nchart_data %>% \n  add_nice_names() %>% \n  ggplot(aes(x = stats::reorder(start_end, -trajectory), y = trajectory, group = scenario, color = scenario)) +\n  geom_line(size = 1.5, alpha = 0.8) + \n  theme_2dii_ggplot() +\n  scale_color_manual(values = c(primary_green, primary_orange, primary_blue)) +  \n  facet_grid(rows = vars(sector), cols = vars(year_range),switch=\"x\") + \n  labs(x = \"Year\", y = \"Ratio\", title = \"Figure 5: Trajectory of emission intensity reductions\") + \n  theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.line.x = element_blank(), axis.title.x = element_blank(), strip.text.x = element_text(family=\"GT America\", color=primary_blue, size = 10, face = \"plain\"), panel.spacing = unit(0.1, \"cm\"))\n\n\n\nFinally, Figure 6 shows the implications of applying the scenario’s trajectory to the portfolio benchmark after the scenario’s transition starts. The greater the disconnect between the portfolio baseline and the scenario’s transition, the less ambitious the portfolio’s scenario aligned target (i.e., 2060 \\(CO_2\\) intensity). While Figure 5 explores the temporal disconnect between the scenario and portfolio to an extreme, even a small delay, say 2014 versus 2019, impacts the scenario aligned portfolio target.\n\n\n# calculate lag indices\nchart_data <- etp2017_sda_targets %>% \n  index_market_to_scenario(\n    aviation_intensity = 120,\n    steel_intensity = 2.1, \n    cement_intensity = 1\n  )\n# plot data \nchart_data %>% \n  add_nice_names() %>% \n  ggplot(aes(x = year, y = emission_factor_ald, group = lag, color = scenario)) +\n  geom_line() + \n  scale_color_manual(values = c(primary_green, primary_orange, primary_blue)) +  \n  labs(x = \"Year\", y = \"\", title = \"Figure 6: Implications on the aligned portfolio benchmark\", caption = \"*Each line corresponds to a lagged scenario trajectory multiplied by portfolio's current CO2 intensity.\") + \n  facet_grid(\n    rows = vars(sector), \n    cols = vars(scenario),\n    switch = \"y\",\n    scales = \"free_y\", \n    labeller = as_labeller(c(Steel = \"t CO2 per t steel\", Cement = \"t CO2 per t cement\", Aviation = \"g CO2 per PKM\", RTS = \"RTS\", B2DS = \"B2DS\", SDS = \"SDS\"))\n  ) + \n  theme_2dii_ggplot() + \n  theme(strip.placement = 'outside')\n\n\n\nComplementing Figure 6, Tables 2 and 3 show in concrete terms, the variation in the scenario aligned target in 2060. The greater the delay between the scenario’s transition and the portfolio’s baseline (denoted by the column Lag N), the less ambitious the emission intensity target.\n\n\n# index market to scenario \ntable_data <- etp2017_sda_targets %>%    \n  index_market_to_scenario(\n    aviation_intensity = 120,\n    steel_intensity = 2.1, \n    cement_intensity = 1\n  )\n# take essentials \ntable_data <- table_data %>% \n  select(\n    scenario,\n    sector, \n    year, \n    emission_factor_ald, \n    lag\n  ) %>% \n  pivot_wider(\n    names_from = \"year\",\n    values_from = \"emission_factor_ald\"\n  )\n# add nice names \ntable_data <- table_data %>% \n  add_nice_names() %>% \n  transmute(\n    sector, \n    scenario,\n    `Lag n` = lag, \n    Target = ifelse(is.na(`2060`), \"\", round(`2060`, digits = 1))\n  ) \n# wide again \ntable_data <- table_data %>% \n  pivot_wider(\n    names_from = \"sector\",\n    values_from = \"Target\"\n  )\n# plot table \ntable_data %>% \n  filter(scenario == \"B2DS\") %>% \n  select(-scenario) %>%\n  gt() %>% \n  theme_2dii_gt() %>% \n  data_color(\n    columns = vars(Aviation, Cement, Steel),\n    colors = c(primary_green, primary_orange),\n    alpha = 0.4,\n    apply_to = c(\"fill\"),\n    autocolor_text = FALSE\n  ) %>% \n  tab_header(\n    title = \"Table 2: B2DS aligned portfolio target in 2060\", \n    subtitle = \"CO2 intensity\"\n  )\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#zmzllufxsp .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #1b324f;\n  font-size: 12px;\n  background-color: white;\n  width: 90%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: white;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#zmzllufxsp .gt_heading {\n  background-color: white;\n  text-align: center;\n  border-bottom-color: white;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: white;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: white;\n}\n\n#zmzllufxsp .gt_title {\n  color: #1b324f;\n  font-size: 20px;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: white;\n  border-bottom-width: 0;\n}\n\n#zmzllufxsp .gt_subtitle {\n  color: #1b324f;\n  font-size: 14px;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: white;\n  border-top-width: 0;\n}\n\n#zmzllufxsp .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #1b324f;\n}\n\n#zmzllufxsp .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: white;\n  border-bottom-style: solid;\n  border-bottom-width: 5px;\n  border-bottom-color: #1b324f;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: white;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: white;\n}\n\n#zmzllufxsp .gt_col_heading {\n  color: #1b324f;\n  background-color: white;\n  font-size: 15.5px;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#zmzllufxsp .gt_column_spanner_outer {\n  color: #1b324f;\n  background-color: white;\n  font-size: 15.5px;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#zmzllufxsp .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#zmzllufxsp .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#zmzllufxsp .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 5px;\n  border-bottom-color: #1b324f;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#zmzllufxsp .gt_group_heading {\n  padding: 8px;\n  color: #1b324f;\n  background-color: white;\n  font-size: 14px;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #1b324f;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #1b324f;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#zmzllufxsp .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #1b324f;\n  background-color: white;\n  font-size: 14px;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #1b324f;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #1b324f;\n  vertical-align: middle;\n}\n\n#zmzllufxsp .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#zmzllufxsp .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#zmzllufxsp .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#zmzllufxsp .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #1b324f;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #1b324f;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #1b324f;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#zmzllufxsp .gt_stub {\n  color: #1b324f;\n  background-color: white;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#zmzllufxsp .gt_summary_row {\n  color: #1b324f;\n  background-color: white;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zmzllufxsp .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#zmzllufxsp .gt_grand_summary_row {\n  color: #1b324f;\n  background-color: white;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zmzllufxsp .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#zmzllufxsp .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: white;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #1b324f;\n}\n\n#zmzllufxsp .gt_footnotes {\n  color: #1b324f;\n  background-color: white;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zmzllufxsp .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#zmzllufxsp .gt_sourcenotes {\n  color: #1b324f;\n  background-color: white;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zmzllufxsp .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#zmzllufxsp .gt_left {\n  text-align: left;\n}\n\n#zmzllufxsp .gt_center {\n  text-align: center;\n}\n\n#zmzllufxsp .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#zmzllufxsp .gt_font_normal {\n  font-weight: normal;\n}\n\n#zmzllufxsp .gt_font_bold {\n  font-weight: bold;\n}\n\n#zmzllufxsp .gt_font_italic {\n  font-style: italic;\n}\n\n#zmzllufxsp .gt_super {\n  font-size: 65%;\n}\n\n#zmzllufxsp .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\nTable 2: B2DS aligned portfolio target in 2060\n    CO2 intensity\n    Lag n\n      Steel\n      Aviation\n      Cement\n    Lag 1\n      0.2\n      16.4\n      0.2\n    Lag 2\n      0.2\n      20.6\n      0.2\n    Lag 3\n      0.3\n      27.3\n      0.3\n    Lag 4\n      0.4\n      36.5\n      0.3\n    Lag 5\n      0.5\n      51.0\n      0.4\n    Lag 6\n      0.7\n      66.9\n      0.6\n    Lag 7\n      1.0\n      88.4\n      0.7\n    Lag 8\n      2.1\n      120.0\n      1.0\n    \n\n\n\n# another table \ntable_data %>% \n  filter(scenario == \"RTS\") %>% \n  select(-scenario) %>%\n  gt() %>% \n  theme_2dii_gt() %>% \n  data_color(\n    columns = vars(Aviation, Cement, Steel),\n    colors = c(primary_green, primary_orange),\n    alpha = 0.4,\n    apply_to = c(\"fill\"),\n    autocolor_text = FALSE\n  ) %>% \n  tab_header(\n    title = \"Table 3: RTS aligned portfolio target in 2060\",\n    subtitle = \"CO2 intensity\"\n  )\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#ctbarmhznj .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #1b324f;\n  font-size: 12px;\n  background-color: white;\n  width: 90%;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: white;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ctbarmhznj .gt_heading {\n  background-color: white;\n  text-align: center;\n  border-bottom-color: white;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: white;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: white;\n}\n\n#ctbarmhznj .gt_title {\n  color: #1b324f;\n  font-size: 20px;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: white;\n  border-bottom-width: 0;\n}\n\n#ctbarmhznj .gt_subtitle {\n  color: #1b324f;\n  font-size: 14px;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: white;\n  border-top-width: 0;\n}\n\n#ctbarmhznj .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #1b324f;\n}\n\n#ctbarmhznj .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: white;\n  border-bottom-style: solid;\n  border-bottom-width: 5px;\n  border-bottom-color: #1b324f;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: white;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: white;\n}\n\n#ctbarmhznj .gt_col_heading {\n  color: #1b324f;\n  background-color: white;\n  font-size: 15.5px;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ctbarmhznj .gt_column_spanner_outer {\n  color: #1b324f;\n  background-color: white;\n  font-size: 15.5px;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ctbarmhznj .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ctbarmhznj .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ctbarmhznj .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 5px;\n  border-bottom-color: #1b324f;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ctbarmhznj .gt_group_heading {\n  padding: 8px;\n  color: #1b324f;\n  background-color: white;\n  font-size: 14px;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #1b324f;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #1b324f;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ctbarmhznj .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #1b324f;\n  background-color: white;\n  font-size: 14px;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #1b324f;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #1b324f;\n  vertical-align: middle;\n}\n\n#ctbarmhznj .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ctbarmhznj .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ctbarmhznj .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ctbarmhznj .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #1b324f;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #1b324f;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #1b324f;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ctbarmhznj .gt_stub {\n  color: #1b324f;\n  background-color: white;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#ctbarmhznj .gt_summary_row {\n  color: #1b324f;\n  background-color: white;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ctbarmhznj .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#ctbarmhznj .gt_grand_summary_row {\n  color: #1b324f;\n  background-color: white;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ctbarmhznj .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ctbarmhznj .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: white;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #1b324f;\n}\n\n#ctbarmhznj .gt_footnotes {\n  color: #1b324f;\n  background-color: white;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ctbarmhznj .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#ctbarmhznj .gt_sourcenotes {\n  color: #1b324f;\n  background-color: white;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ctbarmhznj .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#ctbarmhznj .gt_left {\n  text-align: left;\n}\n\n#ctbarmhznj .gt_center {\n  text-align: center;\n}\n\n#ctbarmhznj .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ctbarmhznj .gt_font_normal {\n  font-weight: normal;\n}\n\n#ctbarmhznj .gt_font_bold {\n  font-weight: bold;\n}\n\n#ctbarmhznj .gt_font_italic {\n  font-style: italic;\n}\n\n#ctbarmhznj .gt_super {\n  font-size: 65%;\n}\n\n#ctbarmhznj .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\nTable 3: RTS aligned portfolio target in 2060\n    CO2 intensity\n    Lag n\n      Steel\n      Aviation\n      Cement\n    Lag 1\n      1.9\n      54.1\n      0.8\n    Lag 2\n      1.9\n      60.6\n      0.8\n    Lag 3\n      1.9\n      68.2\n      0.8\n    Lag 4\n      1.8\n      77.9\n      0.9\n    Lag 5\n      1.8\n      89.2\n      0.9\n    Lag 6\n      1.9\n      102.3\n      1.0\n    Lag 7\n      2.0\n      112.9\n      1.0\n    Lag 8\n      2.1\n      120.0\n      1.0\n    \n\n\nConclusions\nThis short blog post was inspired by a personal desire to understand better “the data.” I hope this post does not dissuade from applying a scenario’s trajectory to a portfolio’s current \\(CO_2\\) intensity or production, but rather to illustrate the need for caution when scaling macro scenario changes to the micro — a reference portfolio or market. To put it simply, make sure you are dealing with just apples and not apples and oranges. Please do not hesitate to reach out if you have any questions or feedback: vincent@2degrees-investing.org.\n\n\nIEA. 2017. “Energy Technology Perspectives 2017.” IEA. https://www.iea.org/topics/energy-technology-perspectives.\n\n\nIPCC. 2018. “Global Warming of 1.5°C. An Ipcc Special Report on the Impacts of Global Warming of 1.5°C Above Pre-Industrial Levels and Related Global Greenhouse Gas Emission Pathways, in the Context of Strengthening the Global Response to the Threat of Climate Change, Sustainable Development, and Efforts to Eradicate Poverty.” https://www.ipcc.ch/sr15/chapter/spm/.\n\n\nPIK, IIASA, and SEI. 2020. “SENSE.” SENSES Toolkit. https://climatescenarios.org/about/.\n\n\nWorld Steel Association. 2019. “2019 World Steel in Figures.” https://www.worldsteel.org/publications/bookshop/product-details~World-Steel-in-Figures-2019~PRODUCT~World-Steel-in-Figures-2019~.html.\n\n\n\n\n",
    "preview": "posts/2020-07-24-when-scenarios-and-reality-diverge/preview.png",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {},
    "preview_width": 1536,
    "preview_height": 960
  },
  {
    "path": "posts/2020-07-18-improving-r2dii-match/",
    "title": "Improving r2dii.match",
    "description": "How to work with big data, and benchmarks of a more efficient version of `match_name()`",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-07-18",
    "categories": [
      "r2dii",
      "package"
    ],
    "contents": "\nmatch_name() may run out of memory if your data is too big. Most software for data analysis has a limit to how much data it can handle with a given hardware. If your data is too big to run match_name() on your computer, consider using only an informative subset of data or a more powerful computer. For example, here are some alternatives to consider:\nFeed match_name() with data of only one sector, or part of one sector (see filter()).\nFeed match_name() with data of only the loans that make up most of the credit limit or outstanding credit limit. You might need just 20% of the data to capture 80% of the credit; more data might not change the overall result.\nRun match_name() on a powerful computer on the cloud.\nSoon we’ll show examples of the approaches (1) and (2) above. Until then, you may want to watch RStudio’s webinar on Working with Big Data in R.\nHowever you use match_name(), it should use as little time and memory as it is reasonably possible. That is our goal. Here I compare two versions of match_name(): the version in development versus the version on CRAN (r2dii.match 0.0.3). Compared to the version on CRAN, the version in development uses a small fraction of the time and memory. The rest of this post shows the benchmarks.\nPackages:\n\n\nlibrary(bench)\nlibrary(devtools)\nlibrary(dplyr)\nlibrary(fs)\nlibrary(ggplot2)\nlibrary(r2dii.data)\n\nI’ll use the names devel and cran to refer to the versions of match_name() that are, respectively, in development and on CRAN (r2dii.match 0.0.3).\n\n\n# The older version on CRAN\npackageVersion(\"r2dii.match\")\n#> [1] '0.0.3'\n# Copy of match_name on CRAN\ncran <- r2dii.match::match_name\n\n# The newer version in development\nsuppressMessages(devtools::load_all(fs::path_home(\"git\", \"r2dii.match\")))\npackageVersion(\"r2dii.match\")\n#> [1] '0.0.3.9000'\n# Copy of match_name in development\ndevel <- r2dii.match::match_name\n\nBoth versions have different source code:\n\n\n# Confirm the two versions of `match_name` are different\nidentical(devel, cran)\n#> [1] FALSE\n\nCompared to the version on CRAN, the version in development takes less time. It calls the expensive garbage collector fewer times, and at a more economic level. (I use check = FALSE because the output is not identical; the two outputs differ in the order of their rows, but if we reorder the rows in the same way, both outputs are equivalent.)\n\n\nbenchmark <- bench::mark(\n  check = FALSE,\n  iterations = 30,\n  matched_devel = matched_devel <- devel(loanbook_demo, ald_demo),\n  matched_cran = matched_cran <- cran(loanbook_demo, ald_demo)\n)\n\n# No output means that the two expressions are indeed equivalent\ntestthat::expect_equivalent(\n  matched_devel %>% arrange(across(names(.))),\n  matched_cran %>% arrange(across(names(.)))\n)\n\nbenchmark\n#> # A tibble: 2 x 6\n#>   expression         min   median `itr/sec` mem_alloc `gc/sec`\n#>   <bch:expr>    <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n#> 1 matched_devel 155.36ms  167.5ms     5.60         NA     4.67\n#> 2 matched_cran     1.11s     1.5s     0.685        NA     6.07\n\nggplot2::autoplot(benchmark)\n\n\nThanks to your feedback, match_name() is becoming more efficient. We expect to release the improved version on CRAN soon.\n\n\n",
    "preview": "posts/2020-07-18-improving-r2dii-match/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-07-08-installing-packages-without-internet/",
    "title": "Installing R packages when you are offline",
    "description": "Some options and hacks",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-07-08",
    "categories": [
      "other"
    ],
    "contents": "\nWhen you can’t install R packages from a repository online, what can you do? I won’t discuss any solution deeply; instead I’ll discuss a number of alternatives briefly, and share links for you to explore.\nDon’t do it: Ask IT\nOften the reason why you can’t access online repositories is because your computer is part of a larger network that someone else manages and limits. Find that person and ask them if they can install in your computer the R environment you need. If that isn’t possible, keep reading but keep in mind that the solutions I describe may take some time and effort; and any hack may leave your system in bad shape. Even if you have to face red tape or wait some time, it may be best to find the right person for this job.\nDon’t do it: Can you get away with rstudio.cloud?\nBefore you bother installing anything, you may want to first try the packages you think you want. At http://rstudio.cloud/ you can get an online instance of RStudio and install in it whatever packages you want. If what you experience is not what you want, you are done; if it is what you want, keep reading.\nDocker\nDocker allows you to build a mini “guest” computer – called “container” – and run it from any “host” computer. With Docker you can create the R environment you want, including a specific version of R and R packages. Explore the useful Docker images from the rocker project; they can help you create a Docker container with R, RStudio, and all the packages you need – quickly. You can run such a complete container even offline, and from a host computer that lacks R and RStudio.\nYou may struggle to understand, install, or use Docker; I did. It can be particularly challenging on Windows. Keep pushing. To create the portable and reproducible R environment I describe here, what you need to learn of Docker is only a little. It’s worthwhile.\nCan you build packages from source?\nDevelopers create R packages as a bunch human-oriented text-files and folders. But installed packages are a little different, and the source code needs to be transformed before your computer can use it. That transformation may be done by CRAN, before you even get the package. But you can do it too – if your computer is prepared to build R packages; you can check that with\n\n# install.packages(\"pkgbuild\")\npkgbuild::check_build_tools()\n#> Your system is ready to build packages!\nBuilding and installing packages from source\nIf your system is ready to build packages you have a couple of options. You can use miniCRAN to create a local CRAN repository, including a target package and all its dependencies; later you can use your local repository to build each package with devtools::build() and install it with devtools::install().\nIf you want to share your repository with others, you may use the package drat to create an online clone and serve it on GitHub pages. Your drat repository will allow other folks to download your selection of R packages, and even use it locally offline – just as you did. Your drat repository would also allow anyone online to install any package directly from it (instead of CRAN or another repository).\nGetting pre-built packages to use them in a similar system\nIf your system is not ready to build packages you may make it so, or get the pre-built version of the packages you need, and later use them in a similar system offline. This is a hack and you should try to avoid it; but if you must do it, you may abuse the package renv for this.\nThe package renv creates a local library of binary packages under your working directory: (1) Create a new RStudio project; (2) initialize renv with renv::init(); and (3) install the packages you need with renv::install(). The installed version of all packages will now be under the directory ./renv/library/. Those packages will likely work on another computer running the same platform and minor version of R. For example, if you are running Windows 10 and R 3.6.x, the packages should work on another computer running Windows 10 and 3.6.y but not R 3.5.x. When you want to use one of the hacked packages, you will need to tell library() where to find them – with the argument lib.loc:\nExtend the default libraries to include the hacked packages\n\n\n.libPaths()\n#> [1] \"/home/mauro/R/x86_64-pc-linux-gnu-library/4.0\"\n#> [2] \"/opt/R/4.0.0/lib/R/library\"\n\nall_libraries <- c(.libPaths(), \"path/to/your/hacked/packages\")\nall_libraries\n#> [1] \"/home/mauro/R/x86_64-pc-linux-gnu-library/4.0\"\n#> [2] \"/opt/R/4.0.0/lib/R/library\"                   \n#> [3] \"path/to/your/hacked/packages\"\n\nUse packages from all libraries, including the hacked packages\n\nlibrary(somepackage, lib.loc = all_libraries)\nR defaults to look for packages under the paths given by .libPaths(); but placing your hacked packages there is a bad idea because you may leave your entire R environment in bad shape. Remember: This is a hack and you should try to avoid it.\n\n\n",
    "preview": "posts/2020-07-08-installing-packages-without-internet/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-06-30-r2dii-suite-is-now-on-cran/",
    "title": "r2dii suite is now on CRAN",
    "description": "R packages to implement the core functionality of the Paris Agreement Capital Transition Assessment (PACTA)",
    "author": [
      {
        "name": "Jackson Hoffart",
        "url": "https://github.com/jdhoffa"
      }
    ],
    "date": "2020-06-30",
    "categories": [
      "r2dii",
      "package"
    ],
    "contents": "\nAdapted from https://jdhoffa.github.io/blog/r2dii-suite-is-now-on-cran/.\nThe core suite of r2dii packages (r2dii.data, r2dii.match and r2dii.analysis), are now published on CRAN!\nThe r2dii suite was developed to implement the core functionality of the Paris Agreement Capital Transition Assessment (PACTA) in R. PACTA is a methodology which allows financial institutions to aggregate climate-related data associated to their portfolios, and compare the result against climate scenarios.\nInstallation\nYou can easily install all three packages directly from CRAN using:\n\nr2dii <- c(\"r2dii.data\", \"r2dii.match\", \"r2dii.analysis\")\ninstall.packages(r2dii)\nTo get the latest development version any one package, you can install it from GitHub. Fir example, you can install r2dii.data from GitHub using:\n\ndevtools::install_github(\"2DegreesInvesting/r2dii.data\")\nWarning: Development versions are experimental and may be unstable. Proceed with caution.\nYou can then use each package with library().\n\n\nlibrary(r2dii.data)\nlibrary(r2dii.match)\nlibrary(r2dii.analysis)\n\nThis example also uses two optional but convenient packages to manipulate and plot data:\n\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\nr2dii.data\nr2dii.data provides a series of fake datasets. These are mainly meant to be used as a tool to learn how the methodology works, and also to provide an easy sandbox for testing. The built-in data_dictionary provides a view of all datasets in the package, along with variable definitions:\n\n\ndata_dictionary %>%\n  distinct(dataset)\n#> # A tibble: 13 x 1\n#>    dataset                    \n#>    <chr>                      \n#>  1 ald_demo                   \n#>  2 co2_intensity_scenario_demo\n#>  3 data_dictionary            \n#>  4 isic_classification        \n#>  5 iso_codes                  \n#>  6 loanbook_demo              \n#>  7 nace_classification        \n#>  8 naics_classification       \n#>  9 overwrite_demo             \n#> 10 region_isos                \n#> 11 region_isos_demo           \n#> 12 scenario_demo_2020         \n#> 13 sector_classifications\n\nSome of the most useful datasets are:\nloanbook_demo: a loanbook dataset which can be used as a template to format real loanbook/ portfolio data.\nald_demo: a so-called “asset-level” dataset, containing crucial climate data at the asset level. (eg. power-plant capacity data, automotive car production, steel company emission factors)\nscenario_demo_2020: a fake climate scenario, offering technology pathways that would likely limit warming to less than 2 degrees Celsius.\nr2dii.match\nr2dii.match provides the tools necessary to match the counter-parties in a loanbook to the climate data of the assets that they own.\nOwing to the fact that many lending portfolios are exposed to mid- and small- size companies, which are often not publicly-listed, matching data can be tricky. To achieve these links, we have written wrappers around some common fuzzy matching algorithms, which play nicely with formatted loanbook’s and ald’s.\nYou can run the matching algorithm on sample data provided by r2dii.data:\n\n\nmatched <- match_name(loanbook_demo, ald_demo)\n\nmatched %>%\n  select(name, sector, name_ald, sector_ald, score)\n#> # A tibble: 502 x 5\n#>    name                 sector   name_ald             sector_ald score\n#>    <chr>                <chr>    <chr>                <chr>      <dbl>\n#>  1 Aston Martin         automot… aston martin         automotive     1\n#>  2 Avtozaz              automot… avtozaz              automotive     1\n#>  3 Bogdan               automot… bogdan               automotive     1\n#>  4 Ch Auto              automot… ch auto              automotive     1\n#>  5 Chehejia             automot… chehejia             automotive     1\n#>  6 Chtc Auto            automot… chtc auto            automotive     1\n#>  7 Dongfeng Honda       automot… dongfeng honda       automotive     1\n#>  8 Dongfeng-Luxgen      automot… dongfeng-luxgen      automotive     1\n#>  9 Electric Mobility S… automot… electric mobility s… automotive     1\n#> 10 Faraday Future       automot… faraday future       automotive     1\n#> # … with 492 more rows\n\nAfter the initial matching, you must manually verify which of the matches you would like to keep. To do so, simply save matched as a .csv, and open in excel or similar. If you would like to keep a match, write the score to 1. If you don’t want the match, leave the score as anything but 1:\n\n\nmatched %>%\n  filter(score != 1) %>%\n  arrange(desc(score)) %>%\n  select(name, sector, name_ald, sector_ald, score)\n#> # A tibble: 30 x 5\n#>    name                sector  name_ald               sector_ald score\n#>    <chr>               <chr>   <chr>                  <chr>      <dbl>\n#>  1 Bhushan Energy Ltd. power   bhagwan energy ltd.    power      0.906\n#>  2 Cementos San Juan   cement  cemento sur            cement     0.900\n#>  3 Shandong Qiyin Cem… cement  shangfeng cement group cement     0.883\n#>  4 Handong Shipbuildi… shippi… han dong               shipping   0.856\n#>  5 Hanil Express Co L… shippi… han sung line co ltd   shipping   0.853\n#>  6 Nandi Roller Inc.   power   nandi roller flour mi… power      0.851\n#>  7 Yuanbsaoshan Power… power   yiyang baoyuan power … power      0.849\n#>  8 Yuama Inc.          power   ykk usa, inc.          power      0.843\n#>  9 Hanil Express Co L… shippi… hanison                shipping   0.838\n#> 10 Hanil Express Co L… shippi… hana marine co ltd     shipping   0.835\n#> # … with 20 more rows\n\nThe final step is to prioritize your matches. This ensures that the same loan isn’t accidentally matched to multiple ald companies.\nRead the validated match file back into R and run:\n\n\nmatch_result <- matched %>%\n  prioritize()\n\nmatch_result %>%\n  select(name_direct_loantaker, loan_size_outstanding, sector, name_ald)\n#> # A tibble: 267 x 4\n#>    name_direct_loantaker  loan_size_outstan… sector   name_ald        \n#>    <chr>                               <dbl> <chr>    <chr>           \n#>  1 Shaanxi Auto                       396377 automot… shaanxi auto    \n#>  2 Shandong Auto                      319353 automot… shandong auto   \n#>  3 Shandong Kama                      258105 automot… shandong kama   \n#>  4 Shandong Tangjun Ouli…             332345 automot… shandong tangju…\n#>  5 Shanghai Automotive I…             203353 automot… shanghai automo…\n#>  6 Shanxi Dayun                       329561 automot… shanxi dayun    \n#>  7 Shenyang Polarsun                  261817 automot… shenyang polars…\n#>  8 Shuanghuan Auto                    337913 automot… shuanghuan auto \n#>  9 Sichuan Auto                       227481 automot… sichuan auto    \n#> 10 Singulato                          334201 automot… singulato       \n#> # … with 257 more rows\n\nr2dii.analysis\nThe final step is to analyze your matched dataset, and compare the results to a climate scenario.\nYou can apply scenario targets to your loanbook data by calling:\n\n\nportfolio_targets <- match_result %>%\n  target_market_share(\n    ald_demo,\n    scenario_demo_2020,\n    region_isos_demo\n  )\n\nportfolio_targets\n#> # A tibble: 1,170 x 7\n#>    sector technology  year region scenario_source weighted_produc…\n#>    <chr>  <chr>      <int> <chr>  <chr>           <chr>           \n#>  1 autom… electric    2020 global demo_2020       projected       \n#>  2 autom… electric    2020 global demo_2020       normalized_corp…\n#>  3 autom… electric    2020 global demo_2020       target_cps      \n#>  4 autom… electric    2020 global demo_2020       target_sds      \n#>  5 autom… electric    2020 global demo_2020       target_sps      \n#>  6 autom… hybrid      2020 global demo_2020       projected       \n#>  7 autom… hybrid      2020 global demo_2020       normalized_corp…\n#>  8 autom… hybrid      2020 global demo_2020       target_cps      \n#>  9 autom… hybrid      2020 global demo_2020       target_sds      \n#> 10 autom… hybrid      2020 global demo_2020       target_sps      \n#> # … with 1,160 more rows, and 1 more variable:\n#> #   weighted_production_value <dbl>\n\nAnd you can plot the distribution of technologies using ggplot2:\n\n\nportfolio_targets %>%\n  # different targets can be plotted by setting these filters\n  filter(\n    sector == \"power\",\n    weighted_production_metric != \"normalized_corporate_economy\",\n    year == max(year)\n  ) %>%\n  group_by(technology) %>%\n  ggplot(aes(\n    x = weighted_production_metric, \n    y = weighted_production_value, \n    fill = technology\n  )) +\n  geom_col(position = \"fill\") +\n  labs(\n    x = \"Metric\",\n    y = \"Weighted Capacity [%]\"\n  )\n\n\n\n\n",
    "preview": "posts/2020-06-30-r2dii-suite-is-now-on-cran/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-06-29-r2dii-analysis-0-0-1/",
    "title": "r2dii.analysis 0.0.1 is now on CRAN",
    "description": "Tools to calculate climate targets for financial portfolios",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-06-29",
    "categories": [
      "r2dii",
      "package"
    ],
    "contents": "\nTable of Contents\nAcknowledgements\nr2dii.analysis is an R package that provides tools to calculate climate targets for financial portfolios. The version 0.0.1 is the first one released on CRAN.\nYou can install it from CRAN with:\n\ninstall.packages(\"r2dii.analysis\")\nThen use it with:\n\n\nlibrary(r2dii.analysis)\n\nThe best place to know about this package is on its website. The home page details how to install and use this package, and includes a number of useful links – to try r2dii.analysis before you install it, to minimize installation errors, and to report bugs or raise issues. The navigation bar includes three important sections: (1) Get started introduces you to the package; (2) Reference lists every feature and links to its help file; and (3) Articles explains the Sectoral Decarbonization Approach (SDA), and the Market Share Approach.\nAs a preview, this snippet shows one feature of r2dii.analysis:\nBefore you can use r2dii.analysis you need to load and prepare your data. Here I use toy data from the package r2dii.data, and two functions from the package r2dii.match.\n\n\nlibrary(r2dii.match)\nlibrary(r2dii.data)\n\n# Using the package r2dii.data to imitate loading data\nloanbook <- loanbook_demo\nald <- ald_demo\nco2 <- co2_intensity_scenario_demo\n\n# Using the package r2dii.match to prepare the data\nmatched <- match_name(loanbook, ald) %>% prioritize()\n\nYou can now use r2dii.analysis, for example, to calculate targets of CO2 emissions per unit production at the portfolio-level – using the sectoral-decarbonization approach (SDA).\n\n\nmatched %>% target_sda(ald = ald, co2_intensity_scenario = co2)\n#> # A tibble: 28 x 4\n#>    sector  year emission_factor_metric emission_factor_value\n#>    <chr>  <dbl> <chr>                                  <dbl>\n#>  1 cement  2020 projected                              0.664\n#>  2 cement  2020 target                                 0.669\n#>  3 cement  2020 scenario_benchmark                     0.7  \n#>  4 cement  2021 projected                              0.665\n#>  5 cement  2021 target                                 0.612\n#>  6 cement  2021 scenario_benchmark                     0.64 \n#>  7 cement  2022 projected                              0.666\n#>  8 cement  2022 target                                 0.555\n#>  9 cement  2022 scenario_benchmark                     0.580\n#> 10 cement  2023 projected                              0.667\n#> # … with 18 more rows\n\nAcknowledgements\n\n\n\nAlthough this release includes commits from only a few contributors (Clare2D, jdhoffa, maurolepore, vintented), it is thanks to ideas and feedback from many more colleagues at 2DII.\n\n\n",
    "preview": "posts/2020-06-29-r2dii-analysis-0-0-1/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-06-26-instructions-to-raise-an-issue/",
    "title": "How to raise an issue",
    "description": "Help us help you",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-06-26",
    "categories": [
      "r2dii",
      "community",
      "favorites"
    ],
    "contents": "\nOpen source packages improve thanks to people like you who kindly contribute to open source software. Your contribution to the packages we build can be as simple as raising an issue. Here is how you can do just that.\nEach package has a website with a link to report a bug or raise any in-scope issue (more on this below). For example, the website of the package r2dii.match lives here and looks like this:\n\n\n\nFigure 1: The website of every package has a link to report a bug.\n\n\n\nThe link to report a bug opens a page that, like an email, has two parts:\nA title to summarize your issue;\nA body to detail your issue. We know you are busy; please follow our instructions carefully to avoid emails and solve the issue quickly.\n\n\n\nFigure 2: The web page to report a bug is like an email.\n\n\n\nWhat’s beyond our scope\nOur scope is limited. We assume you are familiar with R. (To learn R see our favorite resources.) The issues we can address are those caused specifically by the packages we build. Report everything else at https://stackoverflow.com/ or https://community.rstudio.com/.\nThe most common out-of-scope problems are installation errors. It’s unlikely the problem comes from our packages because we continuously check that they install correctly – with multiple version of R, and on Windows, Linux, and several other platforms). What should you do then?\nA tale of two R programmers\nMike and Lucy are working together and want to use the package r2dii.match. They try to install it with install.packages(\"r2dii.match\") but they get an error.\n\nMike: “Bummer!”\n\n\nLucy: “Wait; let’s read the error message carefully.”\n\nThe error message makes no sense. Mike Googles it and finds some promising results. Lucy tries a few hacks but nothing works.\n\nLucy: “It’s all sooooooo confusing; but there is something about versions, right? These R geeks move fast – they pump new stuff every day!”\n\n\nMike: “What if we ask at RStudio community? They seem friendly.”\n\n\nLucy: “Yeah, those folks are cool. But let’s first update everything – I mean R, RStudio, and all R packages. It can’t hurt and sooner or later we’ll have to do it anyway. Here is a nice guide.”\n\n\nMike: “That’ll take a while but you are right. Let’s bite the bullet.”\n\nAfter an hour or so.\n\nLucy: “Okay, done! Here we go again.”\n\n\nMike: “Fingers crossed.”\n\nThey look at each other. Then Lucy runs install.packages(\"r2dii.match\"). Then it just works.\nBottom line: Get current people1.\nGet current, people. You don’t want to adopt new things on day one. But at some point, running old versions of software adds unnecessary difficulty. – How to think about upgrading R and RStudio↩︎\n",
    "preview": "posts/2020-06-26-instructions-to-raise-an-issue/preview.png",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {},
    "preview_width": 1438,
    "preview_height": 912
  },
  {
    "path": "posts/2020-06-23-github-and-rstudio/",
    "title": "Onboarding to GitHub and RStudio",
    "description": "Tools and practices to hit the ground running",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-06-23",
    "categories": [
      "other",
      "community"
    ],
    "contents": "\nAt 2DII we use a particular workflow – a set of tools and practices. This post is about what you should know to work effectively with us, or whoever uses the same workflow.\nIntroduction to GitHub\nWe collaborate on GitHub, and embrace the so called GitHub flow. Whatever your experience with GitHub, you may like these resources:\nWhat is GitHub? (4’ video).\nIntroduction to GitHub (1-2 h tutorial from GitHub Lab).\nJoin 2DII’s GitHub organization\n\n[GitHub] Organizations are shared accounts where businesses and open-source projects can collaborate across many projects at once. Owners and administrators can manage member access to the organization’s data and projects with sophisticated security and administrative features. – About organizations\n\nTo join our GitHub organization you need to be invited by someone with special (“Owner”) privileges. Find that person by asking on the #coding channel on 2DII’s Slack and share your GitHub username.\nSetup\nMost of our code on GitHub is written in R and from RStudio. Here is how to set things up:\nSetup (instructions; 20’ video). If you are already set, use this guide to confirm we are all set in the same way.\nHow to contribute to GitHub from the terminal and from RStudio (35’ video)1.\nWhy Git, and how it relates to GitHub and RStudio\nGit is the heart of GitHub. We use it to track each meaningful change in our projects. You may use Git from the terminal or from a dedicated program (e.g. GitKraken); but you rarely need anything special because the most useful features of Git are available directly from RStudio.\nGit handbook (10’ read).\nGit cheat sheets.\nCollaboration and time travel- version control with git, github and RStudio (50’ video).\nNext\nWe are working on multiple projects you may want to know about:\nds-incubator: Weekly meetups to share best practices.\nresources: A place to explore and share resources.\ncoding-helpdesk: Live support by appointment.\nr2dii: A collection of R packages we maintain.\ndev-hangout: Weekly discussion of wider coding related topics.\nWhat else (or less) do you think a successful onboarding should have?\n\nCaveat: In this video I violate the GitHub flow in that I submit a pull request not from a feature branch (as I should) but from the master branch.↩︎\n",
    "preview": "posts/2020-06-23-github-and-rstudio/preview.jpg",
    "last_modified": "2021-05-05T06:46:00-06:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-06-11-r2dii-analysis-release-candidate/",
    "title": "r2dii.analysis: Release candidate",
    "description": "Help us get to the first release",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-06-15",
    "categories": [
      "package",
      "r2dii"
    ],
    "contents": "\nr2dii.analysis approaches its first release but first we’d love you to try it out and give us some feedback. Please report bugs, and incorrect or unclear documentation; you may also suggest changes to the interfaces, such as a better name for a function, or argument.\nInstall the development version of r2dii.analysis from GitHub with:\n\n# install.packages(\"devtools\")\ndevtools::install_github(\"2DegreesInvesting/r2dii.analysis\")\nThen load it with:\n\n\nlibrary(r2dii.analysis)\n\nThe best place to start your review is its website. Start reviewing the home page, then each item under Reference, and finally each of the two article (1, 2). At every stage ask yourself three questions:\nDoes the code run as expected?\nAre the examples useful?\nIs the documentation clear and the style natural?\nYou may leave a quick comment at the end of this post, or a longer comment as a GitHub issue.\nThank you!\n\n\n",
    "preview": "posts/2020-06-11-r2dii-analysis-release-candidate/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-06-10-what-technical-skills-matter/",
    "title": "What technical skills matter?",
    "description": "Find or become a T-shaped developer with the 20% you need 80% of the time",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-06-10",
    "categories": [
      "other"
    ],
    "contents": "\nYou may be hiring a software developer; Or you may be a software developer for hire. In any case, you ask: What technical skills matter?\nAlthough the specific answer for you and me is different, the general answer for both of us is likely similar. These two ideas should guide almost everyone:\n“T-shaped” developers. Organizations tend to prefer “T-shaped” developers who have a “broad knowledge of the entire discipline with deeper specializations in a few areas”.\nThe 80/20 rule. “Roughly 80% of the effects come from 20% of the causes”.\nWhat are the few vital skills people need most of the time? This is the “20%”, and the smaller horizontal-segment of the “T”; and it’s the broad knowledge all software developers should have. For example, most projects around me use a few common tools: The tidyverse to wrangle, analyze, and plot data; Shiny to make plots interactive; Git and GitHub for distributed version control; and GitHub Actions to automate workflows.\nOnly a few projects – or parts of your projects – need deep skills. This is the “80%” that makes each person unique, and the longer vertical-segment of the “T”. In a team, it seems best for these skills to overlap a little and complement a lot. The little overlap helps people understand what someone else is doing; it also increases the TruckNumber of each project1. And the complement allows the team to handle a wide range of exceptional (parts of your) projects before the best option is outsourcing.\nLet’s now combine these ideas in two takeaways for just about any team:\nIt is a must for everyone to have the few vital skills they need most of the time.\nIt is nice to have people with deep experience in areas that overlap a little and complement a lot.\n“The TruckNumber is the size of the smallest set of people in a project such that, if one of them got hit by a truck, the project would be in trouble.” – https://wiki.c2.com/?TruckNumber↩︎\n",
    "preview": "posts/2020-06-10-what-technical-skills-matter/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-06-05-r2dii-match-0-0-2/",
    "title": "r2dii.match 0.0.2 is now on CRAN",
    "description": "It's compatible with R back to 3.4, and dplyr 0.8.5; but update ASAP!",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-06-05",
    "categories": [
      "r2dii",
      "package"
    ],
    "contents": "\nTable of Contents\nDo our packages work on your computer?\nWhen will our packages no longer support older versions of R or R packages?\nShould I update all my R packages frequently? Yes/No? Why?\nAcknowledgements\n\n\n\nr2dii.match 0.0.2 is now on CRAN. r2dii.match provides tools to match financial portfolios with climate data. This release is compatible with R back to 3.4, and with dplyr 0.8.5. But you should update as soon as possible.\n\n\n\nYou can install r2dii.match from CRAN with:\n\ninstall.packages(\"r2dii.match\")\n\n\n\nThen use it with:\n\n\nlibrary(r2dii.match)\n\n\n\n\nAll changes in this version are internal. Internal changes do not affect users in the short term; but in the long term, they might. Here I detail the R environment you need to keep things working as you expect.\nDo our packages work on your computer?\nWe ensure the R-pacakges we build work with these computer environments:\nOperative systems: Work on Windows, Mac, and Linux.\nVersions of R:\n“release” (latest-release, now R-4.0);\n“devel” (in-development next-release);\n“oldrel” (last-release, now R-3.6);\nand two older minor releases (now R-3.5 and R-3.4).\n\nR packages: Latest version on CRAN.\nWhen will our packages no longer support older versions of R or R packages?\nIf your R environment is different from what’s listed above, our packages might fail. We enforce that your R version is earlier than four minor-releases (e.g. R-3.3 is now too old). But we rarely enforce specific versions of R packages. Even if your outdated packages might be incompatible, it is up to you to update them or not.\nShould I update all my R packages frequently? Yes/No? Why?\n\nYou will always eventually have a reason that you must update. So you can either do that very infrequently, suffer with old versions in the middle, and experience great pain at update. Or admit that maintaining your system is a normal ongoing activity, and do it more often.\n\n\nThere are definitely situations where people have good reason to not update or to do so infrequently or at specific milestones. But I personally encounter many more who suffer from the opposite: updating too infrequently, without any specific reason or because they fear disruption (which makes it worse in the end).\n\n– Jenny Bryan\nYou should update your R packages as often as it is possible and convenient – maybe weekly. This helps you keep up with the rapid change of popular packages. For example, we now support dplyr 0.8.5 but you should update to dplyr 1.0.0 ASAP. Some features of dplyr 0.8.5 have been superseded in dplyr 1.0.0. To stay within best practices, we may enforce dplyr >= 1.0.0 any time.\n\n\n\nAcknowledgements\nWhile this release includes commits from only a few of us (jdhoffa, maurolepore), it is thanks to ideas and feedback from many more colleagues at 2DII.\n\n\n",
    "preview": "posts/2020-06-05-r2dii-match-0-0-2/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-06-03-r2dii-data-0-1-0/",
    "title": "r2dii.data 0.1.0 is now on CRAN",
    "description": "This release includes new and improved datasets.",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-06-03",
    "categories": [
      "r2dii",
      "package"
    ],
    "contents": "\nTable of Contents\nAcknowledgements\nr2dii.data 0.1.0 is now on CRAN. r2dii.data provides public datasets to help you study how financial assets align to climate scenarios.\nThis release signals that r2dii.data is now maturing. You can install it from CRAN with:\n\ninstall.packages(\"r2dii.data\")\nThen use it with:\n\n\nlibrary(r2dii.data)\n\nI also use the package dplyr; it is not necessary but convenient.\n\n\nlibrary(dplyr)\n\nAll user-facing changes are listed in the changelog; here I’ll show the most important ones.\nWe fixed a bug in the dataset naics_classification; it now contains the correct data.\n\n\nnaics_classification\n#> # A tibble: 1,057 x 4\n#>      code naics_title                            sector     borderline\n#>     <dbl> <chr>                                  <chr>      <lgl>     \n#>  1 111110 soybean farming                        not in sc… FALSE     \n#>  2 111120 oilseed (except soybean) farming       not in sc… FALSE     \n#>  3 111130 dry pea and bean farming               not in sc… FALSE     \n#>  4 111140 wheat farming                          not in sc… FALSE     \n#>  5 111150 corn farming                           not in sc… FALSE     \n#>  6 111160 rice farming                           not in sc… FALSE     \n#>  7 111191 oilseed and grain combination farming  not in sc… FALSE     \n#>  8 111199 all other grain farming                not in sc… FALSE     \n#>  9 111211 potato farming                         not in sc… FALSE     \n#> 10 111219 other vegetable (except potato) and m… not in sc… FALSE     \n#> # … with 1,047 more rows\n\nThe dataset region_isos now includes the value “global” in the column region; it also gained the column source.\n\n\nregion_isos %>% filter(region == \"global\")\n#> # A tibble: 206 x 3\n#>    region isos  source  \n#>    <chr>  <chr> <chr>   \n#>  1 global bg    weo_2019\n#>  2 global hr    weo_2019\n#>  3 global cy    weo_2019\n#>  4 global mt    weo_2019\n#>  5 global ro    weo_2019\n#>  6 global au    weo_2019\n#>  7 global at    weo_2019\n#>  8 global be    weo_2019\n#>  9 global ca    weo_2019\n#> 10 global cl    weo_2019\n#> # … with 196 more rows\n\nThe dataset ald_demo gained the column ald_emission_factor_unit.\n\n\nselect(ald_demo, ald_emission_factor_unit)\n#> # A tibble: 17,368 x 1\n#>    ald_emission_factor_unit       \n#>    <chr>                          \n#>  1 tons of CO2 per per hour per MW\n#>  2 tons of CO2 per per hour per MW\n#>  3 tons of CO2 per per hour per MW\n#>  4 tons of CO2 per per hour per MW\n#>  5 tons of CO2 per per hour per MW\n#>  6 tons of CO2 per per hour per MW\n#>  7 tons of CO2 per per hour per MW\n#>  8 tons of CO2 per per hour per MW\n#>  9 tons of CO2 per per hour per MW\n#> 10 tons of CO2 per per hour per MW\n#> # … with 17,358 more rows\n\nFinally, we added three new datasets: co2_intensity_scenario_demo, region_isos_demo, and scenario_demo_2020.\n\n\nglimpse(region_isos_demo)\n#> Rows: 334\n#> Columns: 3\n#> $ region <chr> \"advanced economies\", \"advanced economies\", \"advance…\n#> $ isos   <chr> \"bg\", \"hr\", \"cy\", \"mt\", \"ro\", \"au\", \"at\", \"be\", \"ca\"…\n#> $ source <chr> \"demo_2020\", \"demo_2020\", \"demo_2020\", \"demo_2020\", …\n\nglimpse(scenario_demo_2020)\n#> Rows: 1,323\n#> Columns: 8\n#> $ scenario        <chr> \"cps\", \"cps\", \"cps\", \"cps\", \"cps\", \"cps\", \"…\n#> $ sector          <chr> \"automotive\", \"automotive\", \"automotive\", \"…\n#> $ technology      <chr> \"electric\", \"hybrid\", \"ice\", \"electric\", \"h…\n#> $ region          <chr> \"global\", \"global\", \"global\", \"global\", \"gl…\n#> $ year            <int> 2020, 2020, 2020, 2021, 2021, 2021, 2022, 2…\n#> $ tmsr            <dbl> 1.000000, 1.000000, 1.000000, 1.120288, 1.1…\n#> $ smsp            <dbl> 0.000000000, 0.000000000, 0.000000000, 0.00…\n#> $ scenario_source <chr> \"demo_2020\", \"demo_2020\", \"demo_2020\", \"dem…\n\nglimpse(co2_intensity_scenario_demo)\n#> Rows: 22\n#> Columns: 7\n#> $ scenario_source      <chr> \"demo_2020\", \"demo_2020\", \"demo_2020\",…\n#> $ scenario             <chr> \"demo\", \"demo\", \"demo\", \"demo\", \"demo\"…\n#> $ sector               <chr> \"cement\", \"cement\", \"cement\", \"cement\"…\n#> $ region               <chr> \"global\", \"global\", \"global\", \"global\"…\n#> $ year                 <dbl> 2020, 2021, 2022, 2023, 2024, 2025, 20…\n#> $ emission_factor_unit <chr> \"tons of CO2 per ton of Cement\", \"tons…\n#> $ emission_factor      <dbl> 0.700000, 0.640000, 0.580000, 0.520000…\n\nAcknowledgements\n\n\n\nWhile this release includes commits from only a few of us (jdhoffa, maurolepore), it is thanks to ideas and feedback from many more colleagues at 2DII.\n\n\n",
    "preview": "posts/2020-06-03-r2dii-data-0-1-0/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-06-02-shape-and-share-your-thoughts-here/",
    "title": "Shape and share your thoughts here",
    "description": "\"If you think without writing, you only think you're thinking\" -- Leslie Lamport.",
    "author": [
      {
        "name": "Mauro Lepore",
        "url": "https://github.com/maurolepore"
      }
    ],
    "date": "2020-06-02",
    "categories": [
      "meta",
      "ds-incubator"
    ],
    "contents": "\nA great deal of what you do at work is to think and share your thoughts. But “If you think without writing, you only think you’re thinking” (Leslie Lamport). To shape and share your thoughts you need a blog. To lean how to create your own blog see ds-incubator#47.\nThis blog uses distill, a publication format for scientific and technical writing, native to the web. Learn more about using distill at https://rstudio.github.io/distill.\nStart now. If you want to publish a new post you wrote, submit a pull request here. For these other things, open an issue here:\nDiscuss an idea for a new post.\nSuggest a way to improve this blog.\nShare a link of an article you would like to re-publish here.\nAsk a question.\nI look forward to your hearing from you!\n\n\n",
    "preview": "posts/2020-06-02-shape-and-share-your-thoughts-here/preview.jpg",
    "last_modified": "2021-03-08T06:36:08-07:00",
    "input_file": {}
  }
]
